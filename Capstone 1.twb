<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' inline='true' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Capstone 1 Netflix Dataset' name='excel-direct.03ucw7f1inwnbh10v47jl0vapapw'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/mattr/OneDrive/Documents/Capstone 1 Netflix Dataset.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Capstone 1 Marketing Traditional' name='excel-direct.1ghzae705ouvcu1djislv07v80fh'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/mattr/OneDrive/Documents/Capstone 1 Marketing Traditional.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Capstone 1 Churn' name='excel-direct.03vgjbf0j7m2zl178hwh10r7zh15'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/mattr/OneDrive/Documents/Capstone 1 Churn.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.03ucw7f1inwnbh10v47jl0vapapw' name='Netflix Userbase' table='[&apos;Netflix Userbase$&apos;]' type='table'>
          <columns gridOrigin='A1:J2501:no:A1:J2501:1' header='yes' lost='0' outcome='1' processed='7500'>
            <column datatype='integer' name='User ID' ordinal='0' />
            <column datatype='string' name='Subscription Type' ordinal='1' />
            <column datatype='integer' name='Monthly Revenue' ordinal='2' />
            <column datatype='date' date-parse-format='dd-MM-yy' name='Join Date' ordinal='3' />
            <column datatype='date' date-parse-format='dd-MM-yy' name='Last Payment Date' ordinal='4' />
            <column datatype='string' name='Country' ordinal='5' />
            <column datatype='integer' name='Age' ordinal='6' />
            <column datatype='string' name='Gender' ordinal='7' />
            <column datatype='string' name='Device' ordinal='8' />
            <column datatype='string' name='Plan Duration' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.03ucw7f1inwnbh10v47jl0vapapw' name='Netflix Userbase' table='[&apos;Netflix Userbase$&apos;]' type='table'>
            <columns gridOrigin='A1:J2501:no:A1:J2501:1' header='yes' lost='0' outcome='1' processed='7500'>
              <column datatype='integer' name='User ID' ordinal='0' />
              <column datatype='string' name='Subscription Type' ordinal='1' />
              <column datatype='integer' name='Monthly Revenue' ordinal='2' />
              <column datatype='date' date-parse-format='dd-MM-yy' name='Join Date' ordinal='3' />
              <column datatype='date' date-parse-format='dd-MM-yy' name='Last Payment Date' ordinal='4' />
              <column datatype='string' name='Country' ordinal='5' />
              <column datatype='integer' name='Age' ordinal='6' />
              <column datatype='string' name='Gender' ordinal='7' />
              <column datatype='string' name='Device' ordinal='8' />
              <column datatype='string' name='Plan Duration' ordinal='9' />
            </columns>
          </relation>
          <relation connection='excel-direct.1ghzae705ouvcu1djislv07v80fh' name='Netflix Userbase1' table='[&apos;Netflix Userbase$&apos;]' type='table'>
            <columns gridOrigin='A1:J2501:no:A1:J2501:1' header='yes' lost='0' outcome='1' processed='7500'>
              <column datatype='integer' name='User ID' ordinal='0' />
              <column datatype='string' name='Subscription Type' ordinal='1' />
              <column datatype='integer' name='Monthly Revenue' ordinal='2' />
              <column datatype='string' name='Join Date' ordinal='3' />
              <column datatype='string' name='Last Payment Date' ordinal='4' />
              <column datatype='string' name='Country' ordinal='5' />
              <column datatype='integer' name='Age' ordinal='6' />
              <column datatype='string' name='Gender' ordinal='7' />
              <column datatype='string' name='Device' ordinal='8' />
              <column datatype='string' name='Plan Duration' ordinal='9' />
            </columns>
          </relation>
          <relation connection='excel-direct.03vgjbf0j7m2zl178hwh10r7zh15' name='Netflix Userbase2' table='[&apos;Netflix Userbase$&apos;]' type='table'>
            <columns gridOrigin='A1:J2501:no:A1:J2501:1' lost='0' outcome='1' processed='7500'>
              <column datatype='integer' name='User ID' ordinal='0' />
              <column datatype='string' name='Subscription Type' ordinal='1' />
              <column datatype='integer' name='Monthly Revenue' ordinal='2' />
              <column datatype='string' name='Join Date' ordinal='3' />
              <column datatype='string' name='Last Payment Date' ordinal='4' />
              <column datatype='string' name='Country' ordinal='5' />
              <column datatype='integer' name='Age' ordinal='6' />
              <column datatype='string' name='Gender' ordinal='7' />
              <column datatype='string' name='Device' ordinal='8' />
              <column datatype='string' name='Plan Duration' ordinal='9' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Age (Netflix Userbase1)]' value='[Netflix Userbase1].[Age]' />
          <map key='[Age (Netflix Userbase2)]' value='[Netflix Userbase2].[Age]' />
          <map key='[Age]' value='[Netflix Userbase].[Age]' />
          <map key='[Country (Netflix Userbase1)]' value='[Netflix Userbase1].[Country]' />
          <map key='[Country (Netflix Userbase2)]' value='[Netflix Userbase2].[Country]' />
          <map key='[Country]' value='[Netflix Userbase].[Country]' />
          <map key='[Device (Netflix Userbase1)]' value='[Netflix Userbase1].[Device]' />
          <map key='[Device (Netflix Userbase2)]' value='[Netflix Userbase2].[Device]' />
          <map key='[Device]' value='[Netflix Userbase].[Device]' />
          <map key='[Gender (Netflix Userbase1)]' value='[Netflix Userbase1].[Gender]' />
          <map key='[Gender (Netflix Userbase2)]' value='[Netflix Userbase2].[Gender]' />
          <map key='[Gender]' value='[Netflix Userbase].[Gender]' />
          <map key='[Join Date (Netflix Userbase1)]' value='[Netflix Userbase1].[Join Date]' />
          <map key='[Join Date (Netflix Userbase2)]' value='[Netflix Userbase2].[Join Date]' />
          <map key='[Join Date]' value='[Netflix Userbase].[Join Date]' />
          <map key='[Last Payment Date (Netflix Userbase1)]' value='[Netflix Userbase1].[Last Payment Date]' />
          <map key='[Last Payment Date (Netflix Userbase2)]' value='[Netflix Userbase2].[Last Payment Date]' />
          <map key='[Last Payment Date]' value='[Netflix Userbase].[Last Payment Date]' />
          <map key='[Monthly Revenue (Netflix Userbase1)]' value='[Netflix Userbase1].[Monthly Revenue]' />
          <map key='[Monthly Revenue (Netflix Userbase2)]' value='[Netflix Userbase2].[Monthly Revenue]' />
          <map key='[Monthly Revenue]' value='[Netflix Userbase].[Monthly Revenue]' />
          <map key='[Plan Duration (Netflix Userbase1)]' value='[Netflix Userbase1].[Plan Duration]' />
          <map key='[Plan Duration (Netflix Userbase2)]' value='[Netflix Userbase2].[Plan Duration]' />
          <map key='[Plan Duration]' value='[Netflix Userbase].[Plan Duration]' />
          <map key='[Subscription Type (Netflix Userbase1)]' value='[Netflix Userbase1].[Subscription Type]' />
          <map key='[Subscription Type (Netflix Userbase2)]' value='[Netflix Userbase2].[Subscription Type]' />
          <map key='[Subscription Type]' value='[Netflix Userbase].[Subscription Type]' />
          <map key='[User ID (Netflix Userbase1)]' value='[Netflix Userbase1].[User ID]' />
          <map key='[User ID (Netflix Userbase2)]' value='[Netflix Userbase2].[User ID]' />
          <map key='[User ID]' value='[Netflix Userbase].[User ID]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Netflix Userbase]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J2501:no:A1:J2501:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>7500</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Netflix Userbase1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J2501:no:A1:J2501:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>7500</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Netflix Userbase2]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J2501:no:A1:J2501:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>7500</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>User ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[User ID]</local-name>
            <parent-name>[Netflix Userbase]</parent-name>
            <remote-alias>User ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subscription Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Subscription Type]</local-name>
            <parent-name>[Netflix Userbase]</parent-name>
            <remote-alias>Subscription Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Monthly Revenue]</local-name>
            <parent-name>[Netflix Userbase]</parent-name>
            <remote-alias>Monthly Revenue</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Join Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Join Date]</local-name>
            <parent-name>[Netflix Userbase]</parent-name>
            <remote-alias>Join Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Payment Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Last Payment Date]</local-name>
            <parent-name>[Netflix Userbase]</parent-name>
            <remote-alias>Last Payment Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Netflix Userbase]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[Netflix Userbase]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[Netflix Userbase]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Device</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Device]</local-name>
            <parent-name>[Netflix Userbase]</parent-name>
            <remote-alias>Device</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plan Duration</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Plan Duration]</local-name>
            <parent-name>[Netflix Userbase]</parent-name>
            <remote-alias>Plan Duration</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>User ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[User ID (Netflix Userbase1)]</local-name>
            <parent-name>[Netflix Userbase1]</parent-name>
            <remote-alias>User ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subscription Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Subscription Type (Netflix Userbase1)]</local-name>
            <parent-name>[Netflix Userbase1]</parent-name>
            <remote-alias>Subscription Type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Monthly Revenue (Netflix Userbase1)]</local-name>
            <parent-name>[Netflix Userbase1]</parent-name>
            <remote-alias>Monthly Revenue</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Join Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Join Date (Netflix Userbase1)]</local-name>
            <parent-name>[Netflix Userbase1]</parent-name>
            <remote-alias>Join Date</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Payment Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Last Payment Date (Netflix Userbase1)]</local-name>
            <parent-name>[Netflix Userbase1]</parent-name>
            <remote-alias>Last Payment Date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Netflix Userbase1)]</local-name>
            <parent-name>[Netflix Userbase1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age (Netflix Userbase1)]</local-name>
            <parent-name>[Netflix Userbase1]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender (Netflix Userbase1)]</local-name>
            <parent-name>[Netflix Userbase1]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Device</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Device (Netflix Userbase1)]</local-name>
            <parent-name>[Netflix Userbase1]</parent-name>
            <remote-alias>Device</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plan Duration</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Plan Duration (Netflix Userbase1)]</local-name>
            <parent-name>[Netflix Userbase1]</parent-name>
            <remote-alias>Plan Duration</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>User ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[User ID (Netflix Userbase2)]</local-name>
            <parent-name>[Netflix Userbase2]</parent-name>
            <remote-alias>User ID</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subscription Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Subscription Type (Netflix Userbase2)]</local-name>
            <parent-name>[Netflix Userbase2]</parent-name>
            <remote-alias>Subscription Type</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monthly Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Monthly Revenue (Netflix Userbase2)]</local-name>
            <parent-name>[Netflix Userbase2]</parent-name>
            <remote-alias>Monthly Revenue</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Join Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Join Date (Netflix Userbase2)]</local-name>
            <parent-name>[Netflix Userbase2]</parent-name>
            <remote-alias>Join Date</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Payment Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Last Payment Date (Netflix Userbase2)]</local-name>
            <parent-name>[Netflix Userbase2]</parent-name>
            <remote-alias>Last Payment Date</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Netflix Userbase2)]</local-name>
            <parent-name>[Netflix Userbase2]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age (Netflix Userbase2)]</local-name>
            <parent-name>[Netflix Userbase2]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender (Netflix Userbase2)]</local-name>
            <parent-name>[Netflix Userbase2]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Device</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Device (Netflix Userbase2)]</local-name>
            <parent-name>[Netflix Userbase2]</parent-name>
            <remote-alias>Device</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plan Duration</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Plan Duration (Netflix Userbase2)]</local-name>
            <parent-name>[Netflix Userbase2]</parent-name>
            <remote-alias>Plan Duration</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='# of Users LOD' datatype='integer' name='[# of Users (copy)_3095943287736795144]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Subscription Type]:COUNTD([User ID])}' />
      </column>
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Calculation_3095943287705804803:qk]&quot;' value='Before Phase' />
          <alias key='&quot;[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Calculation_3095943287734448132:qk]&quot;' value='After Phase (Plan 2)' />
          <alias key='&quot;[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Calculation_3095943287734738949:qk]&quot;' value='After Phase (Plan 1)' />
          <alias key='&quot;[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue (Netflix Userbase1):qk]&quot;' value='After Phase' />
        </aliases>
      </column>
      <column aggregation='None' datatype='integer' name='[Age (Netflix Userbase2) (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Age (Netflix Userbase2)]' peg='0' size='2.59' />
      </column>
      <column datatype='integer' name='[Age (Netflix Userbase2)]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Age (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Age]' peg='0' size='2.59' />
      </column>
      <column datatype='string' name='[Age (group) Traditional]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Age]' new-bin='true'>
          <bin default-name='false' value='&quot;25-34&quot;'>
            <value>26</value>
            <value>27</value>
            <value>28</value>
            <value>29</value>
            <value>30</value>
            <value>31</value>
            <value>32</value>
            <value>33</value>
            <value>34</value>
          </bin>
          <bin default-name='false' value='&quot;35-44&quot;'>
            <value>35</value>
            <value>36</value>
            <value>37</value>
            <value>38</value>
            <value>39</value>
            <value>40</value>
            <value>41</value>
            <value>42</value>
            <value>43</value>
            <value>44</value>
          </bin>
          <bin default-name='false' value='&quot;45-54&quot;'>
            <value>45</value>
            <value>46</value>
            <value>47</value>
            <value>48</value>
            <value>49</value>
            <value>50</value>
            <value>51</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Age]' new-bin='true'>
          <bin default-name='false' value='&quot;26-32&quot;'>
            <value>26</value>
            <value>27</value>
            <value>28</value>
            <value>29</value>
            <value>30</value>
            <value>31</value>
            <value>32</value>
          </bin>
          <bin default-name='false' value='&quot;33-39&quot;'>
            <value>33</value>
            <value>34</value>
            <value>35</value>
            <value>36</value>
            <value>37</value>
            <value>38</value>
            <value>39</value>
          </bin>
          <bin default-name='false' value='&quot;40-45&quot;'>
            <value>40</value>
            <value>41</value>
            <value>42</value>
            <value>43</value>
            <value>44</value>
            <value>45</value>
          </bin>
          <bin default-name='false' value='&quot;46-51&quot;'>
            <value>46</value>
            <value>47</value>
            <value>48</value>
            <value>49</value>
            <value>50</value>
            <value>51</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
      <column caption='Total Revenue' datatype='real' default-format='C1033%' name='[Calculation_1608066558080221184]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Monthly Revenue]*[Calculation_1608066558105223172]' />
      </column>
      <column caption='Months Subscribed' datatype='real' name='[Calculation_1608066558105223172]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2339338546051678210]/30.4' />
      </column>
      <column caption='# of Users' datatype='integer' name='[Calculation_2339338545734172672]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([User ID])' />
      </column>
      <column caption='Basic Plan' datatype='boolean' name='[Calculation_2339338545753182209]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Subscription Type] = &apos;Basic&apos;' />
      </column>
      <column caption='Days Subscribed' datatype='integer' name='[Calculation_2339338546051678210]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Join Date],[Last Payment Date])' />
      </column>
      <column caption='Monthly Rev LOD' datatype='integer' default-format='C1033%' name='[Calculation_3095943287705804803]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Subscription Type]:SUM([Monthly Revenue])}' />
      </column>
      <column caption='Monthly Rev LOD 2' datatype='integer' default-format='C1033%' name='[Calculation_3095943287734448132]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Subscription Type (Netflix Userbase2)]:SUM([Monthly Revenue (Netflix Userbase2)])}' />
      </column>
      <column caption='Monthly Rev LOD 1' datatype='integer' default-format='C1033%' name='[Calculation_3095943287734738949]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Subscription Type (Netflix Userbase1)]:SUM([Monthly Revenue (Netflix Userbase1)])}' />
      </column>
      <column caption='# of Users LOD 1' datatype='integer' name='[Calculation_3095943287735980038]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Subscription Type (Netflix Userbase1)]:COUNTD([User ID (Netflix Userbase1)])}' />
      </column>
      <column caption='# of Users LOD 2' datatype='integer' name='[Calculation_3095943287736131591]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Subscription Type (Netflix Userbase2)]:COUNTD([User ID (Netflix Userbase2)])}' />
      </column>
      <column caption='# of Users Plan 2' datatype='integer' name='[Calculation_355784389789573120]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([User ID (Netflix Userbase2)])' />
      </column>
      <column datatype='string' name='[Country (Netflix Userbase1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country (Netflix Userbase2)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;United States&quot;' value='US' />
        </aliases>
      </column>
      <column caption='Device Type' datatype='string' name='[Device]' role='dimension' type='nominal' />
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='date' datatype-customized='true' name='[Join Date]' role='dimension' type='ordinal' />
      <column datatype='date' datatype-customized='true' name='[Last Payment Date]' role='dimension' type='ordinal' />
      <column datatype='integer' default-format='C1033%' name='[Monthly Revenue (Netflix Userbase1)]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='C1033%' name='[Monthly Revenue (Netflix Userbase2)]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='C1033%' name='[Monthly Revenue]' role='measure' type='quantitative' />
      <column datatype='string' name='[Subscription Type (Netflix Userbase1)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Subscription Type (Netflix Userbase2)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
      <column datatype='integer' name='[User ID (Netflix Userbase2)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[User ID]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Netflix Userbase' datatype='table' name='[__tableau_internal_object_id__].[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Marketing Userbase' datatype='table' name='[__tableau_internal_object_id__].[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Netflix Userbase2' datatype='table' name='[__tableau_internal_object_id__].[Netflix Userbase_E98CF78663024620AAD6712967471C70]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[Subscription Type (Netflix Userbase1)]' derivation='None' name='[none:Subscription Type (Netflix Userbase1):nk]' pivot='key' type='nominal' />
      <column-instance column='[Subscription Type (Netflix Userbase2)]' derivation='None' name='[none:Subscription Type (Netflix Userbase2):nk]' pivot='key' type='nominal' />
      <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_3095943287705804803]' derivation='Sum' name='[sum:Calculation_3095943287705804803:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3095943287734448132]' derivation='Sum' name='[sum:Calculation_3095943287734448132:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3095943287734738949]' derivation='Sum' name='[sum:Calculation_3095943287734738949:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Monthly Revenue (Netflix Userbase1)]' derivation='Sum' name='[sum:Monthly Revenue (Netflix Userbase1):qk]' pivot='key' type='quantitative' />
      <group caption='Big Three' name='[Big Three]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/mattr/AppData/Local/Temp/TableauTemp/#TableauTemp_0qf94tx12ij3w211toha60ke2w0l.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/20/2024 07:26:51 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5' table='[Extract].[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5' table='[Extract].[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]' type='table' />
            <relation name='Netflix Userbase_704219761A974937B34EFA5EF47ACF04' table='[Extract].[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]' type='table' />
            <relation name='Netflix Userbase_E98CF78663024620AAD6712967471C70' table='[Extract].[Netflix Userbase_E98CF78663024620AAD6712967471C70]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[Age (Netflix Userbase1)]' value='[Netflix Userbase_704219761A974937B34EFA5EF47ACF04].[Age]' />
            <map key='[Age (Netflix Userbase2)]' value='[Netflix Userbase_E98CF78663024620AAD6712967471C70].[Age]' />
            <map key='[Age]' value='[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5].[Age]' />
            <map key='[Country (Netflix Userbase1)]' value='[Netflix Userbase_704219761A974937B34EFA5EF47ACF04].[Country]' />
            <map key='[Country (Netflix Userbase2)]' value='[Netflix Userbase_E98CF78663024620AAD6712967471C70].[Country]' />
            <map key='[Country]' value='[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5].[Country]' />
            <map key='[Device (Netflix Userbase1)]' value='[Netflix Userbase_704219761A974937B34EFA5EF47ACF04].[Device]' />
            <map key='[Device (Netflix Userbase2)]' value='[Netflix Userbase_E98CF78663024620AAD6712967471C70].[Device]' />
            <map key='[Device]' value='[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5].[Device]' />
            <map key='[Gender (Netflix Userbase1)]' value='[Netflix Userbase_704219761A974937B34EFA5EF47ACF04].[Gender]' />
            <map key='[Gender (Netflix Userbase2)]' value='[Netflix Userbase_E98CF78663024620AAD6712967471C70].[Gender]' />
            <map key='[Gender]' value='[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5].[Gender]' />
            <map key='[Join Date (Netflix Userbase1)]' value='[Netflix Userbase_704219761A974937B34EFA5EF47ACF04].[Join Date]' />
            <map key='[Join Date (Netflix Userbase2)]' value='[Netflix Userbase_E98CF78663024620AAD6712967471C70].[Join Date]' />
            <map key='[Join Date]' value='[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5].[Join Date]' />
            <map key='[Last Payment Date (Netflix Userbase1)]' value='[Netflix Userbase_704219761A974937B34EFA5EF47ACF04].[Last Payment Date]' />
            <map key='[Last Payment Date (Netflix Userbase2)]' value='[Netflix Userbase_E98CF78663024620AAD6712967471C70].[Last Payment Date]' />
            <map key='[Last Payment Date]' value='[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5].[Last Payment Date]' />
            <map key='[Monthly Revenue (Netflix Userbase1)]' value='[Netflix Userbase_704219761A974937B34EFA5EF47ACF04].[Monthly Revenue]' />
            <map key='[Monthly Revenue (Netflix Userbase2)]' value='[Netflix Userbase_E98CF78663024620AAD6712967471C70].[Monthly Revenue]' />
            <map key='[Monthly Revenue]' value='[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5].[Monthly Revenue]' />
            <map key='[Plan Duration (Netflix Userbase1)]' value='[Netflix Userbase_704219761A974937B34EFA5EF47ACF04].[Plan Duration]' />
            <map key='[Plan Duration (Netflix Userbase2)]' value='[Netflix Userbase_E98CF78663024620AAD6712967471C70].[Plan Duration]' />
            <map key='[Plan Duration]' value='[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5].[Plan Duration]' />
            <map key='[Subscription Type (Netflix Userbase1)]' value='[Netflix Userbase_704219761A974937B34EFA5EF47ACF04].[Subscription Type]' />
            <map key='[Subscription Type (Netflix Userbase2)]' value='[Netflix Userbase_E98CF78663024620AAD6712967471C70].[Subscription Type]' />
            <map key='[Subscription Type]' value='[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5].[Subscription Type]' />
            <map key='[User ID (Netflix Userbase1)]' value='[Netflix Userbase_704219761A974937B34EFA5EF47ACF04].[User ID]' />
            <map key='[User ID (Netflix Userbase2)]' value='[Netflix Userbase_E98CF78663024620AAD6712967471C70].[User ID]' />
            <map key='[User ID]' value='[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5].[User ID]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>User ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[User ID]</local-name>
              <parent-name>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</parent-name>
              <remote-alias>User ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Netflix Userbase</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2500</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Subscription Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Subscription Type]</local-name>
              <parent-name>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</parent-name>
              <remote-alias>Subscription Type</remote-alias>
              <ordinal>1</ordinal>
              <family>Netflix Userbase</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Monthly Revenue</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Monthly Revenue]</local-name>
              <parent-name>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</parent-name>
              <remote-alias>Monthly Revenue</remote-alias>
              <ordinal>2</ordinal>
              <family>Netflix Userbase</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Join Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Join Date]</local-name>
              <parent-name>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</parent-name>
              <remote-alias>Join Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Netflix Userbase</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>261</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Last Payment Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Last Payment Date]</local-name>
              <parent-name>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</parent-name>
              <remote-alias>Last Payment Date</remote-alias>
              <ordinal>4</ordinal>
              <family>Netflix Userbase</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>5</ordinal>
              <family>Netflix Userbase</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Age</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Age]</local-name>
              <parent-name>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</parent-name>
              <remote-alias>Age</remote-alias>
              <ordinal>6</ordinal>
              <family>Netflix Userbase</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gender]</local-name>
              <parent-name>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</parent-name>
              <remote-alias>Gender</remote-alias>
              <ordinal>7</ordinal>
              <family>Netflix Userbase</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Device</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Device]</local-name>
              <parent-name>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</parent-name>
              <remote-alias>Device</remote-alias>
              <ordinal>8</ordinal>
              <family>Netflix Userbase</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plan Duration</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Plan Duration]</local-name>
              <parent-name>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</parent-name>
              <remote-alias>Plan Duration</remote-alias>
              <ordinal>9</ordinal>
              <family>Netflix Userbase</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>User ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[User ID (Netflix Userbase1)]</local-name>
              <parent-name>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</parent-name>
              <remote-alias>User ID</remote-alias>
              <ordinal>10</ordinal>
              <family>Netflix Userbase1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2500</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Subscription Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Subscription Type (Netflix Userbase1)]</local-name>
              <parent-name>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</parent-name>
              <remote-alias>Subscription Type</remote-alias>
              <ordinal>11</ordinal>
              <family>Netflix Userbase1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Monthly Revenue</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Monthly Revenue (Netflix Userbase1)]</local-name>
              <parent-name>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</parent-name>
              <remote-alias>Monthly Revenue</remote-alias>
              <ordinal>12</ordinal>
              <family>Netflix Userbase1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Join Date</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Join Date (Netflix Userbase1)]</local-name>
              <parent-name>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</parent-name>
              <remote-alias>Join Date</remote-alias>
              <ordinal>13</ordinal>
              <family>Netflix Userbase1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>263</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Last Payment Date</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Last Payment Date (Netflix Userbase1)]</local-name>
              <parent-name>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</parent-name>
              <remote-alias>Last Payment Date</remote-alias>
              <ordinal>14</ordinal>
              <family>Netflix Userbase1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Netflix Userbase1)]</local-name>
              <parent-name>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>15</ordinal>
              <family>Netflix Userbase1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Age</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Age (Netflix Userbase1)]</local-name>
              <parent-name>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</parent-name>
              <remote-alias>Age</remote-alias>
              <ordinal>16</ordinal>
              <family>Netflix Userbase1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gender (Netflix Userbase1)]</local-name>
              <parent-name>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</parent-name>
              <remote-alias>Gender</remote-alias>
              <ordinal>17</ordinal>
              <family>Netflix Userbase1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Device</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Device (Netflix Userbase1)]</local-name>
              <parent-name>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</parent-name>
              <remote-alias>Device</remote-alias>
              <ordinal>18</ordinal>
              <family>Netflix Userbase1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plan Duration</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Plan Duration (Netflix Userbase1)]</local-name>
              <parent-name>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</parent-name>
              <remote-alias>Plan Duration</remote-alias>
              <ordinal>19</ordinal>
              <family>Netflix Userbase1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>User ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[User ID (Netflix Userbase2)]</local-name>
              <parent-name>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</parent-name>
              <remote-alias>User ID</remote-alias>
              <ordinal>20</ordinal>
              <family>Netflix Userbase2</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2500</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Subscription Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Subscription Type (Netflix Userbase2)]</local-name>
              <parent-name>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</parent-name>
              <remote-alias>Subscription Type</remote-alias>
              <ordinal>21</ordinal>
              <family>Netflix Userbase2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Monthly Revenue</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Monthly Revenue (Netflix Userbase2)]</local-name>
              <parent-name>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</parent-name>
              <remote-alias>Monthly Revenue</remote-alias>
              <ordinal>22</ordinal>
              <family>Netflix Userbase2</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Join Date</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Join Date (Netflix Userbase2)]</local-name>
              <parent-name>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</parent-name>
              <remote-alias>Join Date</remote-alias>
              <ordinal>23</ordinal>
              <family>Netflix Userbase2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>262</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Last Payment Date</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Last Payment Date (Netflix Userbase2)]</local-name>
              <parent-name>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</parent-name>
              <remote-alias>Last Payment Date</remote-alias>
              <ordinal>24</ordinal>
              <family>Netflix Userbase2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Netflix Userbase2)]</local-name>
              <parent-name>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>25</ordinal>
              <family>Netflix Userbase2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Age</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Age (Netflix Userbase2)]</local-name>
              <parent-name>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</parent-name>
              <remote-alias>Age</remote-alias>
              <ordinal>26</ordinal>
              <family>Netflix Userbase2</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gender (Netflix Userbase2)]</local-name>
              <parent-name>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</parent-name>
              <remote-alias>Gender</remote-alias>
              <ordinal>27</ordinal>
              <family>Netflix Userbase2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Device</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Device (Netflix Userbase2)]</local-name>
              <parent-name>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</parent-name>
              <remote-alias>Device</remote-alias>
              <ordinal>28</ordinal>
              <family>Netflix Userbase2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Plan Duration</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Plan Duration (Netflix Userbase2)]</local-name>
              <parent-name>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</parent-name>
              <remote-alias>Plan Duration</remote-alias>
              <ordinal>29</ordinal>
              <family>Netflix Userbase2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Netflix Userbase_E98CF78663024620AAD6712967471C70]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;France&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Country:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;France&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Gender:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[Age (group) Traditional]' type='shape'>
            <map to='circle'>
              <bucket>&quot;45-54&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;25-34&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;35-44&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Subscription Type (Netflix Userbase2):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Basic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Standard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Premium&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Subscription Type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Basic&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>%all%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Premium&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Standard&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Subscription Type (Netflix Userbase1):nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Basic&quot;</bucket>
            <bucket>&quot;Standard&quot;</bucket>
            <bucket>&quot;Premium&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:Subscription Type:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Basic&quot;</bucket>
            <bucket>&quot;Standard&quot;</bucket>
            <bucket>&quot;Premium&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='User ID' />
        <field-sort-custom-order field='Calculation_2339338545734172672' />
        <field-sort-custom-order field='# of Users (copy)_3095943287736795144' />
        <field-sort-custom-order field='Subscription Type' />
        <field-sort-custom-order field='Calculation_2339338545753182209' />
        <field-sort-custom-order field='Monthly Revenue' />
        <field-sort-custom-order field='Calculation_3095943287705804803' />
        <field-sort-custom-order field='Calculation_1608066558080221184' />
        <field-sort-custom-order field='Join Date' />
        <field-sort-custom-order field='Calculation_1608066558097076227' />
        <field-sort-custom-order field='Calculation_2339338546776510470' />
        <field-sort-custom-order field='Last Payment Date' />
        <field-sort-custom-order field='Calculation_2339338546051678210' />
        <field-sort-custom-order field='Calculation_1608066558105223172' />
        <field-sort-custom-order field='Calculation_1608066558096314370' />
        <field-sort-custom-order field='Days Subscribed (copy)_1608066558094721025' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Age' />
        <field-sort-custom-order field='Calculation_2339338546062606341' />
        <field-sort-custom-order field='Calculation_2339338546060722180' />
        <field-sort-custom-order field='Gender' />
        <field-sort-custom-order field='Device' />
        <field-sort-custom-order field='Plan Duration' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Netflix Userbase' id='Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5'>
            <properties context=''>
              <relation connection='excel-direct.03ucw7f1inwnbh10v47jl0vapapw' name='Netflix Userbase' table='[&apos;Netflix Userbase$&apos;]' type='table'>
                <columns gridOrigin='A1:J2501:no:A1:J2501:1' header='yes' lost='0' outcome='1' processed='7500'>
                  <column datatype='integer' name='User ID' ordinal='0' />
                  <column datatype='string' name='Subscription Type' ordinal='1' />
                  <column datatype='integer' name='Monthly Revenue' ordinal='2' />
                  <column datatype='date' date-parse-format='dd-MM-yy' name='Join Date' ordinal='3' />
                  <column datatype='date' date-parse-format='dd-MM-yy' name='Last Payment Date' ordinal='4' />
                  <column datatype='string' name='Country' ordinal='5' />
                  <column datatype='integer' name='Age' ordinal='6' />
                  <column datatype='string' name='Gender' ordinal='7' />
                  <column datatype='string' name='Device' ordinal='8' />
                  <column datatype='string' name='Plan Duration' ordinal='9' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5' table='[Extract].[Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5]' type='table' />
            </properties>
          </object>
          <object caption='Marketing Userbase' id='Netflix Userbase_704219761A974937B34EFA5EF47ACF04'>
            <properties context=''>
              <relation connection='excel-direct.1ghzae705ouvcu1djislv07v80fh' name='Netflix Userbase1' table='[&apos;Netflix Userbase$&apos;]' type='table'>
                <columns gridOrigin='A1:J2501:no:A1:J2501:1' header='yes' lost='0' outcome='1' processed='7500'>
                  <column datatype='integer' name='User ID' ordinal='0' />
                  <column datatype='string' name='Subscription Type' ordinal='1' />
                  <column datatype='integer' name='Monthly Revenue' ordinal='2' />
                  <column datatype='string' name='Join Date' ordinal='3' />
                  <column datatype='string' name='Last Payment Date' ordinal='4' />
                  <column datatype='string' name='Country' ordinal='5' />
                  <column datatype='integer' name='Age' ordinal='6' />
                  <column datatype='string' name='Gender' ordinal='7' />
                  <column datatype='string' name='Device' ordinal='8' />
                  <column datatype='string' name='Plan Duration' ordinal='9' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Netflix Userbase_704219761A974937B34EFA5EF47ACF04' table='[Extract].[Netflix Userbase_704219761A974937B34EFA5EF47ACF04]' type='table' />
            </properties>
          </object>
          <object caption='Netflix Userbase2' id='Netflix Userbase_E98CF78663024620AAD6712967471C70'>
            <properties context=''>
              <relation connection='excel-direct.03vgjbf0j7m2zl178hwh10r7zh15' name='Netflix Userbase2' table='[&apos;Netflix Userbase$&apos;]' type='table'>
                <columns gridOrigin='A1:J2501:no:A1:J2501:1' lost='0' outcome='1' processed='7500'>
                  <column datatype='integer' name='User ID' ordinal='0' />
                  <column datatype='string' name='Subscription Type' ordinal='1' />
                  <column datatype='integer' name='Monthly Revenue' ordinal='2' />
                  <column datatype='string' name='Join Date' ordinal='3' />
                  <column datatype='string' name='Last Payment Date' ordinal='4' />
                  <column datatype='string' name='Country' ordinal='5' />
                  <column datatype='integer' name='Age' ordinal='6' />
                  <column datatype='string' name='Gender' ordinal='7' />
                  <column datatype='string' name='Device' ordinal='8' />
                  <column datatype='string' name='Plan Duration' ordinal='9' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Netflix Userbase_E98CF78663024620AAD6712967471C70' table='[Extract].[Netflix Userbase_E98CF78663024620AAD6712967471C70]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[User ID]' />
              <expression op='[User ID (Netflix Userbase1)]' />
            </expression>
            <first-end-point object-id='Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5' />
            <second-end-point object-id='Netflix Userbase_704219761A974937B34EFA5EF47ACF04' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[User ID]' />
              <expression op='[User ID (Netflix Userbase2)]' />
            </expression>
            <first-end-point object-id='Netflix Userbase_5EF6AFDE84A24A21B15B2A1D625A00A5' />
            <second-end-point object-id='Netflix Userbase_E98CF78663024620AAD6712967471C70' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='# of Users Plan 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column caption='# of Users' datatype='integer' name='[Calculation_2339338545734172672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([User ID])' />
            </column>
            <column datatype='string' name='[Country (Netflix Userbase1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Subscription Type (Netflix Userbase1)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[User ID]' role='dimension' type='ordinal' />
            <column-instance column='[Country (Netflix Userbase1)]' derivation='None' name='[none:Country (Netflix Userbase1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type (Netflix Userbase1)]' derivation='None' name='[none:Subscription Type (Netflix Userbase1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2339338545734172672]' derivation='User' name='[pcto:usr:Calculation_2339338545734172672:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Table' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_2339338545734172672]' derivation='User' name='[usr:Calculation_2339338545734172672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase1):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Subscription Type (Netflix Userbase1):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Subscription Type (Netflix Userbase1):nk]' member='&quot;Basic&quot;' />
                <groupfilter function='member' level='[none:Subscription Type (Netflix Userbase1):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[pcto:usr:Calculation_2339338545734172672:qk:4]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[pcto:usr:Calculation_2339338545734172672:qk:4]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase1):nk]</rows>
        <cols>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country (Netflix Userbase1):nk]</cols>
      </table>
      <simple-id uuid='{05A6BC27-120B-4539-B377-96609D0EE218}' />
    </worksheet>
    <worksheet name='# of Users by Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column caption='# of Users' datatype='integer' name='[Calculation_2339338545734172672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([User ID])' />
            </column>
            <column caption='Basic Plan' datatype='boolean' name='[Calculation_2339338545753182209]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Subscription Type] = &apos;Basic&apos;' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='US' />
              </aliases>
            </column>
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[User ID]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2339338545753182209]' derivation='None' name='[none:Calculation_2339338545753182209:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2339338545734172672]' derivation='User' name='[pcto:usr:Calculation_2339338545734172672:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Table' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_2339338545734172672]' derivation='User' name='[usr:Calculation_2339338545734172672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Calculation_2339338545753182209:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_2339338545753182209:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Calculation_2339338545753182209:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' value='46' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[pcto:usr:Calculation_2339338545734172672:qk:4]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[pcto:usr:Calculation_2339338545734172672:qk:4]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</rows>
        <cols>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{B4C7D6CE-617A-4BD3-841E-09FF4528E364}' />
    </worksheet>
    <worksheet name='# of Users by Plan'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column caption='# of Users' datatype='integer' name='[Calculation_2339338545734172672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([User ID])' />
            </column>
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[User ID]' role='dimension' type='ordinal' />
            <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2339338545734172672]' derivation='User' name='[pcto:usr:Calculation_2339338545734172672:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_2339338545734172672]' derivation='User' name='[usr:Calculation_2339338545734172672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[pcto:usr:Calculation_2339338545734172672:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]</rows>
        <cols>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</cols>
      </table>
      <simple-id uuid='{269C8FC2-DEEC-45CE-B1CE-2AE41DFD6F33}' />
    </worksheet>
    <worksheet name='Age Bins'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column aggregation='None' datatype='integer' name='[Age (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[Age]' peg='0' size='2.59' />
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='# of Users' datatype='integer' name='[Calculation_2339338545734172672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([User ID])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='US' />
              </aliases>
            </column>
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[User ID]' role='dimension' type='ordinal' />
            <column-instance column='[Age (bin)]' derivation='None' name='[none:Age (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2339338545734172672]' derivation='User' name='[usr:Calculation_2339338545734172672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Big Three]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]'>
            <groupfilter function='member' level='[none:Subscription Type:nk]' member='&quot;Basic&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Big Three]</column>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Age (bin):qk]' value='' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]</rows>
        <cols>([federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk] * [federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Age (bin):qk])</cols>
        <show-full-range>
          <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{F7CBE1FC-7FAF-4641-90CD-A664BB5767AF}' />
    </worksheet>
    <worksheet name='Age Groups'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column datatype='string' name='[Age (group) Traditional]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;25-34&quot;'>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                </bin>
                <bin default-name='false' value='&quot;35-44&quot;'>
                  <value>35</value>
                  <value>36</value>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                </bin>
                <bin default-name='false' value='&quot;45-54&quot;'>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='# of Users' datatype='integer' name='[Calculation_2339338545734172672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([User ID])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='US' />
              </aliases>
            </column>
            <column datatype='integer' default-format='C1033%' name='[Monthly Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[User ID]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly Revenue]' derivation='Sum' name='[sum:Monthly Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2339338545734172672]' derivation='User' name='[usr:Calculation_2339338545734172672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]' />
              <lod column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]</rows>
        <cols>([federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional] / [federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk])</cols>
      </table>
      <simple-id uuid='{0A4B3E16-CBC9-4F46-AC87-4A990F6045D3}' />
    </worksheet>
    <worksheet name='Age Stats'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='US' />
              </aliases>
            </column>
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]'>
            <groupfilter function='member' level='[none:Subscription Type:nk]' member='&quot;Basic&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</column>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]' value='148' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Age:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Age:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Age:qk]</rows>
        <cols>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{78D014A8-D5F2-4B98-B439-C277F0322847}' />
    </worksheet>
    <worksheet name='Device Stats'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='US' />
              </aliases>
            </column>
            <column caption='Device Type' datatype='string' name='[Device]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Device]' derivation='None' name='[none:Device:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Age]' derivation='Sum' name='[sum:Age:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]'>
            <groupfilter function='member' level='[none:Subscription Type:nk]' member='&quot;Basic&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</column>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Device:nk]' value='124' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Age:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Age:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Age:qk]</rows>
        <cols>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Device:nk]</cols>
      </table>
      <simple-id uuid='{3468454B-256A-4E2E-9F1D-D84B8135B1A8}' />
    </worksheet>
    <worksheet name='Device Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column caption='# of Users' datatype='integer' name='[Calculation_2339338545734172672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([User ID])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='US' />
              </aliases>
            </column>
            <column caption='Device Type' datatype='string' name='[Device]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='C1033%' name='[Monthly Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[User ID]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Device]' derivation='None' name='[none:Device:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly Revenue]' derivation='Sum' name='[sum:Monthly Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2339338545734172672]' derivation='User' name='[usr:Calculation_2339338545734172672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]' />
              <lod column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]</rows>
        <cols>([federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Device:nk] / [federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk])</cols>
      </table>
      <simple-id uuid='{5E64D8CC-61F3-46BE-8710-F302D4B7CCDE}' />
    </worksheet>
    <worksheet name='Gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column caption='# of Users' datatype='integer' name='[Calculation_2339338545734172672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([User ID])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='US' />
              </aliases>
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[User ID]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2339338545734172672]' derivation='User' name='[pcto:usr:Calculation_2339338545734172672:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_2339338545734172672]' derivation='User' name='[usr:Calculation_2339338545734172672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Big Three]' />
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Big Three]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[pcto:usr:Calculation_2339338545734172672:qk:8]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[pcto:usr:Calculation_2339338545734172672:qk:8]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]</rows>
        <cols>([federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk] / [federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk])</cols>
      </table>
      <simple-id uuid='{CDF5C639-D931-4424-88CA-C90B1E2E1DC3}' />
    </worksheet>
    <worksheet name='Gender Stats'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='US' />
              </aliases>
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Age]' derivation='Sum' name='[sum:Age:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]'>
            <groupfilter function='member' level='[none:Subscription Type:nk]' member='&quot;Basic&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</column>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' value='125' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' />
            </encodings>
            <reference-line axis-column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Age:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Age:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Age:qk]</rows>
        <cols>([federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk] / [federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk])</cols>
      </table>
      <simple-id uuid='{DDD8C478-FCED-46DA-B254-070CC8613A2B}' />
    </worksheet>
    <worksheet name='Geo Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column caption='# of Users' datatype='integer' name='[Calculation_2339338545734172672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([User ID])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='US' />
              </aliases>
            </column>
            <column datatype='integer' default-format='C1033%' name='[Monthly Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[User ID]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly Revenue]' derivation='Sum' name='[sum:Monthly Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2339338545734172672]' derivation='User' name='[usr:Calculation_2339338545734172672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]'>
            <groupfilter function='member' level='[none:Subscription Type:nk]' member='&quot;Basic&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue:qk]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue:qk]' />
              <lod column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]' />
              <lod column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]' />
              <geometry column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Latitude (generated)]</rows>
        <cols>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3A30C68E-1C32-48EB-8F31-170AC93740EA}' />
    </worksheet>
    <worksheet name='Join Date'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column caption='# of Users' datatype='integer' name='[Calculation_2339338545734172672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([User ID])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='US' />
              </aliases>
            </column>
            <column datatype='date' datatype-customized='true' name='[Join Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[User ID]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Join Date]' derivation='Month-Trunc' name='[tmn:Join Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2339338545734172672]' derivation='User' name='[usr:Calculation_2339338545734172672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]</rows>
        <cols>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[tmn:Join Date:qk]</cols>
      </table>
      <simple-id uuid='{B8DF52BD-845E-442B-A0E2-F1EBBF359AEA}' />
    </worksheet>
    <worksheet name='Last Payment Date'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column caption='# of Users' datatype='integer' name='[Calculation_2339338545734172672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([User ID])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='US' />
              </aliases>
            </column>
            <column datatype='date' datatype-customized='true' name='[Last Payment Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[User ID]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Last Payment Date]' derivation='Week-Trunc' name='[twk:Last Payment Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2339338545734172672]' derivation='User' name='[usr:Calculation_2339338545734172672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]</rows>
        <cols>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[twk:Last Payment Date:qk]</cols>
      </table>
      <simple-id uuid='{19E2C8F6-36AF-4679-9F92-F31921DB0D14}' />
    </worksheet>
    <worksheet name='Rev by Country Plan 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column datatype='string' name='[Country (Netflix Userbase1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' default-format='C1033%' name='[Monthly Revenue (Netflix Userbase1)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Subscription Type (Netflix Userbase1)]' role='dimension' type='nominal' />
            <column-instance column='[Country (Netflix Userbase1)]' derivation='None' name='[none:Country (Netflix Userbase1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type (Netflix Userbase1)]' derivation='None' name='[none:Subscription Type (Netflix Userbase1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly Revenue (Netflix Userbase1)]' derivation='Sum' name='[sum:Monthly Revenue (Netflix Userbase1):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase1):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Subscription Type (Netflix Userbase1):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Subscription Type (Netflix Userbase1):nk]' member='&quot;Basic&quot;' />
                <groupfilter function='member' level='[none:Subscription Type (Netflix Userbase1):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='889' />
            <format attr='height' value='821' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country (Netflix Userbase1):nk]' />
              <wedge-size column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue (Netflix Userbase1):qk]' />
              <size column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue (Netflix Userbase1):qk]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country (Netflix Userbase1):nk]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue (Netflix Userbase1):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{67C14FC0-213A-451C-9479-BE7C18E774FE}' />
    </worksheet>
    <worksheet name='Rev/# of Users'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; (US)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column datatype='string' name='[Age (group) Traditional]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;25-34&quot;'>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                </bin>
                <bin default-name='false' value='&quot;35-44&quot;'>
                  <value>35</value>
                  <value>36</value>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                </bin>
                <bin default-name='false' value='&quot;45-54&quot;'>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='# of Users' datatype='integer' name='[Calculation_2339338545734172672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([User ID])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='US' />
              </aliases>
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='C1033%' name='[Monthly Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[User ID]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly Revenue]' derivation='Sum' name='[sum:Monthly Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2339338545734172672]' derivation='User' name='[usr:Calculation_2339338545734172672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]'>
            <groupfilter function='member' level='[none:Subscription Type:nk]' member='&quot;Basic&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</column>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' />
              <shape column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]' />
              <size column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]' />
              <lod column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]' />
              <lod column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue:qk]</rows>
        <cols>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]</cols>
      </table>
      <simple-id uuid='{467F122F-97FC-4E8E-86D7-FE572F4119B1}' />
    </worksheet>
    <worksheet name='Rev/# of Users (Germany)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column datatype='string' name='[Age (group) Traditional]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;25-34&quot;'>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                </bin>
                <bin default-name='false' value='&quot;35-44&quot;'>
                  <value>35</value>
                  <value>36</value>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                </bin>
                <bin default-name='false' value='&quot;45-54&quot;'>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='# of Users' datatype='integer' name='[Calculation_2339338545734172672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([User ID])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='US' />
              </aliases>
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='C1033%' name='[Monthly Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[User ID]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly Revenue]' derivation='Sum' name='[sum:Monthly Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2339338545734172672]' derivation='User' name='[usr:Calculation_2339338545734172672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Big Three]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]'>
            <groupfilter function='member' level='[none:Subscription Type:nk]' member='&quot;Basic&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Big Three]</column>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]' field-type='quantitative' scope='cols' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]' value='Age Group'>
              <formatted-text>
                <run>Age Group</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' />
              <size column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]' />
              <lod column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]' />
              <lod column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value='square' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue:qk]</rows>
        <cols>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]</cols>
      </table>
      <simple-id uuid='{9812D08B-871C-413F-9AB7-135945E696DD}' />
    </worksheet>
    <worksheet name='Rev/# of Users (Italy)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column datatype='string' name='[Age (group) Traditional]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;25-34&quot;'>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                </bin>
                <bin default-name='false' value='&quot;35-44&quot;'>
                  <value>35</value>
                  <value>36</value>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                </bin>
                <bin default-name='false' value='&quot;45-54&quot;'>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='# of Users' datatype='integer' name='[Calculation_2339338545734172672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([User ID])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='US' />
              </aliases>
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='C1033%' name='[Monthly Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[User ID]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly Revenue]' derivation='Sum' name='[sum:Monthly Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2339338545734172672]' derivation='User' name='[usr:Calculation_2339338545734172672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Big Three]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]'>
            <groupfilter function='member' level='[none:Subscription Type:nk]' member='&quot;Basic&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Big Three]</column>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]' field-type='quantitative' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' />
              <size column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]' />
              <lod column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]' />
              <lod column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value='diamond' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue:qk]</rows>
        <cols>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]</cols>
      </table>
      <simple-id uuid='{46C28063-EC75-4D00-825C-0E16359F83A4}' />
    </worksheet>
    <worksheet name='Rev/# of Users (US)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column datatype='string' name='[Age (group) Traditional]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;25-34&quot;'>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                </bin>
                <bin default-name='false' value='&quot;35-44&quot;'>
                  <value>35</value>
                  <value>36</value>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                </bin>
                <bin default-name='false' value='&quot;45-54&quot;'>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='# of Users' datatype='integer' name='[Calculation_2339338545734172672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([User ID])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='US' />
              </aliases>
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='C1033%' name='[Monthly Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[User ID]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly Revenue]' derivation='Sum' name='[sum:Monthly Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2339338545734172672]' derivation='User' name='[usr:Calculation_2339338545734172672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Big Three]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]'>
            <groupfilter function='member' level='[none:Subscription Type:nk]' member='&quot;Basic&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Big Three]</column>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]' field-type='quantitative' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' />
              <size column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]' />
              <lod column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]' />
              <lod column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue:qk]</rows>
        <cols>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]</cols>
      </table>
      <simple-id uuid='{74507CD9-C522-490E-BE20-436477467E19}' />
    </worksheet>
    <worksheet name='Rev/Month by Plan'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column caption='# of Users' datatype='integer' name='[Calculation_2339338545734172672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([User ID])' />
            </column>
            <column datatype='integer' default-format='C1033%' name='[Monthly Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[User ID]' role='dimension' type='ordinal' />
            <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly Revenue]' derivation='Sum' name='[sum:Monthly Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2339338545734172672]' derivation='User' name='[usr:Calculation_2339338545734172672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' value='132' />
            <format attr='text-format' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue:qk]' value='C1033%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue:qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue:qk]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue:qk]</rows>
        <cols>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</cols>
      </table>
      <simple-id uuid='{2887412B-C783-44FB-AAE8-BD9D2E118EA3}' />
    </worksheet>
    <worksheet name='Rev/User v Days Subscribed'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column caption='Total Revenue' datatype='real' default-format='C1033%' name='[Calculation_1608066558080221184]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Monthly Revenue]*[Calculation_1608066558105223172]' />
            </column>
            <column caption='Months Subscribed' datatype='real' name='[Calculation_1608066558105223172]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2339338546051678210]/30.4' />
            </column>
            <column caption='Days Subscribed' datatype='integer' name='[Calculation_2339338546051678210]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Join Date],[Last Payment Date])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='US' />
              </aliases>
            </column>
            <column datatype='date' datatype-customized='true' name='[Join Date]' role='dimension' type='ordinal' />
            <column datatype='date' datatype-customized='true' name='[Last Payment Date]' role='dimension' type='ordinal' />
            <column datatype='integer' default-format='C1033%' name='[Monthly Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[User ID]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[User ID]' derivation='None' name='[none:User ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1608066558080221184]' derivation='Sum' name='[sum:Calculation_1608066558080221184:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2339338546051678210]' derivation='Sum' name='[sum:Calculation_2339338546051678210:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]'>
            <groupfilter function='level-members' level='[none:Subscription Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</column>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:User ID:ok]' />
              <lod column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Calculation_1608066558080221184:qk]</rows>
        <cols>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Calculation_2339338546051678210:qk]</cols>
      </table>
      <simple-id uuid='{D55F7130-8C92-4753-AC79-AF2A8BA459EA}' />
    </worksheet>
    <worksheet name='Revenue Comparison'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column caption='Monthly Rev LOD' datatype='integer' default-format='C1033%' name='[Calculation_3095943287705804803]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Subscription Type]:SUM([Monthly Revenue])}' />
            </column>
            <column caption='Monthly Rev LOD 2' datatype='integer' default-format='C1033%' name='[Calculation_3095943287734448132]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Subscription Type (Netflix Userbase2)]:SUM([Monthly Revenue (Netflix Userbase2)])}' />
            </column>
            <column caption='Monthly Rev LOD 1' datatype='integer' default-format='C1033%' name='[Calculation_3095943287734738949]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Subscription Type (Netflix Userbase1)]:SUM([Monthly Revenue (Netflix Userbase1)])}' />
            </column>
            <column datatype='integer' default-format='C1033%' name='[Monthly Revenue (Netflix Userbase1)]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='C1033%' name='[Monthly Revenue (Netflix Userbase2)]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='C1033%' name='[Monthly Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Subscription Type (Netflix Userbase1)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subscription Type (Netflix Userbase2)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column-instance column='[Subscription Type (Netflix Userbase1)]' derivation='None' name='[none:Subscription Type (Netflix Userbase1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type (Netflix Userbase2)]' derivation='None' name='[none:Subscription Type (Netflix Userbase2):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3095943287705804803]' derivation='Sum' name='[sum:Calculation_3095943287705804803:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3095943287734448132]' derivation='Sum' name='[sum:Calculation_3095943287734448132:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3095943287734738949]' derivation='Sum' name='[sum:Calculation_3095943287734738949:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Monthly Revenue (Netflix Userbase1)]' derivation='Sum' name='[sum:Monthly Revenue (Netflix Userbase1):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Calculation_3095943287705804803:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Calculation_3095943287734738949:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Calculation_3095943287734448132:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Calculation_3095943287705804803:qk]&quot;</bucket>
              <bucket>&quot;[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue (Netflix Userbase1):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase1):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Subscription Type (Netflix Userbase1):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Subscription Type (Netflix Userbase1):nk]' member='&quot;Basic&quot;' />
                <groupfilter function='member' level='[none:Subscription Type (Netflix Userbase1):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase2):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Subscription Type (Netflix Userbase2):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Subscription Type (Netflix Userbase2):nk]' member='&quot;Basic&quot;' />
                <groupfilter function='member' level='[none:Subscription Type (Netflix Userbase2):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[:Measure Names]</column>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase1):nk]</column>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase2):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[:Measure Names]' value='199' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Multiple Values]</rows>
        <cols>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{564DFBED-08AD-472E-A5EC-C711BA92262B}' />
    </worksheet>
    <worksheet name='Revenue Plan 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column datatype='string' name='[Country (Netflix Userbase1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' default-format='C1033%' name='[Monthly Revenue (Netflix Userbase1)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Subscription Type (Netflix Userbase1)]' role='dimension' type='nominal' />
            <column-instance column='[Country (Netflix Userbase1)]' derivation='None' name='[none:Country (Netflix Userbase1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type (Netflix Userbase1)]' derivation='None' name='[none:Subscription Type (Netflix Userbase1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly Revenue (Netflix Userbase1)]' derivation='Sum' name='[sum:Monthly Revenue (Netflix Userbase1):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase1):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Subscription Type (Netflix Userbase1):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Subscription Type (Netflix Userbase1):nk]' member='&quot;Basic&quot;' />
                <groupfilter function='member' level='[none:Subscription Type (Netflix Userbase1):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue (Netflix Userbase1):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue (Netflix Userbase1):qk]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue (Netflix Userbase1):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase1):nk]</rows>
        <cols>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country (Netflix Userbase1):nk]</cols>
      </table>
      <simple-id uuid='{BAB76205-4675-4AFD-AD08-C7ADDB8FB54F}' />
    </worksheet>
    <worksheet name='Revenue by Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column caption='Basic Plan' datatype='boolean' name='[Calculation_2339338545753182209]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Subscription Type] = &apos;Basic&apos;' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='US' />
              </aliases>
            </column>
            <column datatype='integer' default-format='C1033%' name='[Monthly Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2339338545753182209]' derivation='None' name='[none:Calculation_2339338545753182209:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monthly Revenue]' derivation='Sum' name='[sum:Monthly Revenue:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Calculation_2339338545753182209:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_2339338545753182209:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Calculation_2339338545753182209:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue:qk]' />
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</rows>
        <cols>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{1481BB8E-100D-4DF1-BD7C-5BC7905B085F}' />
    </worksheet>
    <worksheet name='User Comparison'>
      <table>
        <view>
          <datasources>
            <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
          </datasources>
          <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
            <column caption='# of Users LOD' datatype='integer' name='[# of Users (copy)_3095943287736795144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Subscription Type]:COUNTD([User ID])}' />
            </column>
            <column caption='Monthly Rev LOD' datatype='integer' default-format='C1033%' name='[Calculation_3095943287705804803]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Subscription Type]:SUM([Monthly Revenue])}' />
            </column>
            <column caption='Monthly Rev LOD 1' datatype='integer' default-format='C1033%' name='[Calculation_3095943287734738949]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Subscription Type (Netflix Userbase1)]:SUM([Monthly Revenue (Netflix Userbase1)])}' />
            </column>
            <column caption='# of Users LOD 1' datatype='integer' name='[Calculation_3095943287735980038]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Subscription Type (Netflix Userbase1)]:COUNTD([User ID (Netflix Userbase1)])}' />
            </column>
            <column caption='# of Users LOD 2' datatype='integer' name='[Calculation_3095943287736131591]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Subscription Type (Netflix Userbase2)]:COUNTD([User ID (Netflix Userbase2)])}' />
            </column>
            <column datatype='integer' default-format='C1033%' name='[Monthly Revenue (Netflix Userbase1)]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='C1033%' name='[Monthly Revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Subscription Type (Netflix Userbase1)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subscription Type (Netflix Userbase2)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[User ID (Netflix Userbase1)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[User ID (Netflix Userbase2)]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[User ID]' role='dimension' type='ordinal' />
            <column-instance column='[Subscription Type (Netflix Userbase1)]' derivation='None' name='[none:Subscription Type (Netflix Userbase1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Subscription Type (Netflix Userbase2)]' derivation='None' name='[none:Subscription Type (Netflix Userbase2):nk]' pivot='key' type='nominal' />
            <column-instance column='[# of Users (copy)_3095943287736795144]' derivation='Sum' name='[sum:# of Users (copy)_3095943287736795144:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3095943287705804803]' derivation='Sum' name='[sum:Calculation_3095943287705804803:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3095943287734738949]' derivation='Sum' name='[sum:Calculation_3095943287734738949:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3095943287735980038]' derivation='Sum' name='[sum:Calculation_3095943287735980038:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3095943287736131591]' derivation='Sum' name='[sum:Calculation_3095943287736131591:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:\# of Users (copy)_3095943287736795144:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Calculation_3095943287735980038:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Calculation_3095943287736131591:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Calculation_3095943287705804803:qk]&quot;</bucket>
              <bucket>&quot;[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Calculation_3095943287734738949:qk]&quot;</bucket>
              <bucket>&quot;[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:\# of Users (copy)_3095943287736795144:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase1):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Subscription Type (Netflix Userbase1):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Subscription Type (Netflix Userbase1):nk]' member='&quot;Basic&quot;' />
                <groupfilter function='member' level='[none:Subscription Type (Netflix Userbase1):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase2):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Subscription Type (Netflix Userbase2):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Subscription Type (Netflix Userbase2):nk]' member='&quot;Basic&quot;' />
                <groupfilter function='member' level='[none:Subscription Type (Netflix Userbase2):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[:Measure Names]</column>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase1):nk]</column>
            <column>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase2):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[:Measure Names]' value='199' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Multiple Values]</rows>
        <cols>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{3B83E8FB-24EF-4BA3-8155-869D613EFF76}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Age and Gender'>
      <style />
      <size maxheight='960' maxwidth='1200' minheight='560' minwidth='420' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='86979' id='7' param='horz' type-v2='layout-flow' w='98666' x='667' y='12188'>
            <zone h='86979' id='5' type-v2='layout-basic' w='89749' x='667' y='12188'>
              <zone h='43490' id='3' name='Age Bins' show-title='false' w='89749' x='667' y='12188'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43489' id='11' name='Gender' show-title='false' w='89749' x='667' y='55678'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='107' h='86979' id='6' is-fixed='true' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='8917' x='90416' y='12188'>
              <zone h='43541' id='10' name='Age Bins' pane-specification-id='2' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]' type-v2='color' w='8916' x='90417' y='12188'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43438' id='12' name='Gender' pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' type-v2='color' w='8916' x='90417' y='55729'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='11355' id='13' type-v2='text' w='98666' x='667' y='833'>
            <formatted-text>
              <run>Comparing our Big Three (the United States, Italy, and Germany) we can start to identify some clear demographic targets. Observing the age ranges of users in each country, we can assign three reasonable brackets with which to group our users: ages 25-34, ages 35-44, and ages 45-54.
Below, we can observe the ratio of male users to female users in each of our Big Three countries across each plan type.
It should be emphasized here that Italy and Germany have drastically fewer users under the Standard and Premium plans than under the Basic Plan.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98334' id='20' param='vert' type-v2='layout-flow' w='98666' x='667' y='833'>
                <zone h='11355' id='13' type-v2='text' w='98666' x='667' y='833'>
                  <formatted-text>
                    <run>Comparing our Big Three (the United States, Italy, and Germany) we can start to identify some clear demographic targets. Observing the age ranges of users in each country, we can assign three reasonable brackets with which to group our users: ages 25-34, ages 35-44, and ages 45-54.
Below, we can observe the ratio of male users to female users in each of our Big Three countries across each plan type.
It should be emphasized here that Italy and Germany have drastically fewer users under the Standard and Premium plans than under the Basic Plan.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43490' id='3' is-fixed='true' name='Age Bins' show-title='false' w='89749' x='667' y='12188'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='43541' id='10' name='Age Bins' pane-specification-id='2' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]' type-v2='color' w='8916' x='90417' y='12188'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43489' id='11' is-fixed='true' name='Gender' show-title='false' w='89749' x='667' y='55678'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='43438' id='12' name='Gender' pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' type-v2='color' w='8916' x='90417' y='55729'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DDAEDEF3-659D-40CD-A837-0921CF75E0B8}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Big Three'>
      <style />
      <size maxheight='960' maxwidth='1200' minheight='560' minwidth='420' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='91667' id='19' param='horz' type-v2='layout-flow' w='98666' x='667' y='833'>
            <zone h='91667' id='17' type-v2='layout-basic' w='98666' x='667' y='833'>
              <zone h='83332' id='7' param='horz' type-v2='layout-flow' w='98666' x='667' y='9168'>
                <zone fixed-size='1083' h='83332' id='3' is-fixed='true' param='horz' type-v2='layout-flow' w='98666' x='667' y='9168'>
                  <zone h='83332' id='11' param='horz' type-v2='layout-flow' w='98666' x='667' y='9168'>
                    <zone h='83332' id='14' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='98666' x='667' y='9168'>
                      <zone fixed-size='392' h='83333' id='15' is-fixed='true' name='Rev/# of Users (Germany)' w='32916' x='667' y='9167'>
                        <layout-cache minheight='213' minwidth='200' type-h='scalable' type-w='scalable' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='solid' />
                          <format attr='border-width' value='1' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone fixed-size='392' h='83333' id='12' is-fixed='true' name='Rev/# of Users (Italy)' w='32917' x='33583' y='9167'>
                        <layout-cache minheight='213' minwidth='200' type-h='scalable' type-w='scalable' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='solid' />
                          <format attr='border-width' value='1' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone fixed-size='392' h='83333' id='5' is-fixed='true' name='Rev/# of Users (US)' w='32833' x='66500' y='9167'>
                        <layout-cache minheight='213' minwidth='200' type-h='scalable' type-w='scalable' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='solid' />
                          <format attr='border-width' value='1' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='8335' id='16' type-v2='text' w='98666' x='667' y='833'>
                <formatted-text>
                  <run>Here we compare the number of users and monthly revenue under the Basic plan for each of our Big Three countries with regards to age bracket (25-34, 35-44, and 45-54) and gender. This allows us to identify the demographic groups that will most strongly impact our revenue with regards to marketing.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='3333' id='22' type-v2='layout-flow' w='98666' x='667' y='92500'>
            <zone fixed-size='24' h='3333' id='20' is-fixed='true' name='Rev/# of Users (Germany)' pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' type-v2='color' w='98666' x='667' y='92500'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone fixed-size='87' h='3334' id='21' is-fixed='true' name='Rev/# of Users (Germany)' pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]' type-v2='size' w='98666' x='667' y='95833'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98334' id='29' param='vert' type-v2='layout-flow' w='98666' x='667' y='833'>
                <zone forceUpdate='true' h='8335' id='16' type-v2='text' w='98666' x='667' y='833'>
                  <formatted-text>
                    <run>Here we compare the number of users and monthly revenue under the Basic plan for each of our Big Three countries with regards to age bracket (25-34, 35-44, and 45-54) and gender. This allows us to identify the demographic groups that will most strongly impact our revenue with regards to marketing.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='83333' id='15' is-fixed='true' name='Rev/# of Users (Germany)' w='32916' x='667' y='9167'>
                  <layout-cache minheight='213' minwidth='200' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='24' h='3333' id='20' name='Rev/# of Users (Germany)' pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' type-v2='color' w='98666' x='667' y='92500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='87' h='3334' id='21' name='Rev/# of Users (Germany)' pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]' type-v2='size' w='98666' x='667' y='95833'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='83333' id='12' is-fixed='true' name='Rev/# of Users (Italy)' w='32917' x='33583' y='9167'>
                  <layout-cache minheight='213' minwidth='200' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='83333' id='5' is-fixed='true' name='Rev/# of Users (US)' w='32833' x='66500' y='9167'>
                  <layout-cache minheight='213' minwidth='200' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2AF0C6F6-9ECF-4EA4-90A6-7C8FDEFACF2E}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Initial Analysis'>
      <style />
      <size maxheight='960' maxwidth='1200' minheight='560' minwidth='420' sizing-mode='range' />
      <datasources>
        <datasource caption='Netflix Userbase (Netflix Userbase Dataset)' name='federated.12x6gvh0kqwi6818ft4on0a6hrha' />
      </datasources>
      <datasource-dependencies datasource='federated.12x6gvh0kqwi6818ft4on0a6hrha'>
        <column caption='Basic Plan' datatype='boolean' name='[Calculation_2339338545753182209]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[Subscription Type] = &apos;Basic&apos;' />
        </column>
        <column datatype='string' name='[Subscription Type]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_2339338545753182209]' derivation='None' name='[none:Calculation_2339338545753182209:nk]' pivot='key' type='nominal' />
        <column-instance column='[Subscription Type]' derivation='None' name='[none:Subscription Type:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='87709' id='7' param='horz' type-v2='layout-flow' w='98666' x='667' y='11458'>
            <zone h='87709' id='5' type-v2='layout-basic' w='98666' x='667' y='11458'>
              <zone h='58721' id='3' name='Geo Map' show-title='false' w='87500' x='667' y='11458'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28988' id='17' name='# of Users by Country' show-title='false' w='68228' x='31105' y='70179'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28988' id='20' name='Rev/Month by Plan' show-title='false' w='30438' x='667' y='70179'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='137' h='58721' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='11166' x='88167' y='11458'>
                <zone h='13333' id='8' mode='radiolist' name='Geo Map' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' type-v2='filter' w='10500' x='88500' y='11875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='7604' id='9' name='Geo Map' pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue:qk]' type-v2='color' w='10500' x='88500' y='25208'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10937' id='18' name='# of Users by Country' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Calculation_2339338545753182209:nk]' type-v2='filter' w='10500' x='88500' y='32812'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='7604' id='19' name='# of Users by Country' pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]' type-v2='color' w='10500' x='88500' y='43749'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='9687' id='21' name='Rev/Month by Plan' pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' type-v2='color' w='10500' x='88500' y='51353'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='10625' id='16' type-v2='text' w='98666' x='667' y='833'>
            <formatted-text>
              <run>We can see here the Basic plan accounts for 39.9% of our total userbase at 999 users, bringing a total revenue of $9,990 monthly. These users are concentrated mostly in the US (7.9% of total userbase), Italy (7.0%), and Germany (5.9%).</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98334' id='28' param='vert' type-v2='layout-flow' w='98666' x='667' y='833'>
                <zone forceUpdate='true' h='10625' id='16' type-v2='text' w='98666' x='667' y='833'>
                  <formatted-text>
                    <run>We can see here the Basic plan accounts for 39.9% of our total userbase at 999 users, bringing a total revenue of $9,990 monthly. These users are concentrated mostly in the US (7.9% of total userbase), Italy (7.0%), and Germany (5.9%).</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13333' id='8' mode='dropdown' name='Geo Map' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' type-v2='filter' w='10500' x='88500' y='11875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58721' id='3' is-fixed='true' name='Geo Map' show-title='false' w='87500' x='667' y='11458'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7604' id='9' name='Geo Map' pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue:qk]' type-v2='color' w='10500' x='88500' y='25208'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='270' h='28988' id='20' is-fixed='true' name='Rev/Month by Plan' show-title='false' w='30438' x='667' y='70179'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9687' id='21' name='Rev/Month by Plan' pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' type-v2='color' w='10500' x='88500' y='51353'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10937' id='18' mode='checkdropdown' name='# of Users by Country' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Calculation_2339338545753182209:nk]' type-v2='filter' w='10500' x='88500' y='32812'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='270' h='28988' id='17' is-fixed='true' name='# of Users by Country' show-title='false' w='68228' x='31105' y='70179'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7604' id='19' name='# of Users by Country' pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]' type-v2='color' w='10500' x='88500' y='43749'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2F10FC16-7660-4017-B243-94ED34D75C73}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Revenue Comp'>
      <style />
      <size maxheight='960' maxwidth='1200' minheight='560' minwidth='420' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='74167' id='3' name='Revenue Comparison' show-title='false' w='98666' x='667' y='25000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='24167' id='5' type-v2='text' w='98666' x='667' y='833'>
            <formatted-text>
              <run>Here we compare our total monthly revenue for all plans before phasing out the Basic plan and after, with two alternative approaches.
The first plan simulates a targeted marketing campaign to retain users during the phase by shifting from the Basic plan to the Standard plan. The campaign targets the top 20 demographics from our 6 countries with the largest number of Basic users: the US (5 demographic targets), Italy (4 targets), Germany (3 targets), Brazil (3), Canada (3), and Spain (2) reaching a total of 618 users, 61.8% of the 999 users currently under the Basic plan. The division was chosen to target the most number of users while minimizing the work needed to create an effective campaign. As we can see, even with 100% success this targeted approach still results in a $3,798 loss in monthly revenue. The second plan assumes an 85% retention of users from the Basic plan, which is the minimum needed to see marginal change to our monthly revenue.
Based on this analysis, it is highly recommended that we do not proceed with phasing out the Basic plan without a solid strategy to retain at least 85% of Basic users, or to supplement the loss of revenue through the Premium plan.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98334' id='12' param='vert' type-v2='layout-flow' w='98666' x='667' y='833'>
                <zone forceUpdate='true' h='24167' id='5' type-v2='text' w='98666' x='667' y='833'>
                  <formatted-text>
                    <run>Here we compare our total monthly revenue for all plans before phasing out the Basic plan and after, with two alternative approaches.
The first plan simulates a targeted marketing campaign to retain users during the phase by shifting from the Basic plan to the Standard plan. The campaign targets the top 20 demographics from our 6 countries with the largest number of Basic users: the US (5 demographic targets), Italy (4 targets), Germany (3 targets), Brazil (3), Canada (3), and Spain (2) reaching a total of 618 users, 61.8% of the 999 users currently under the Basic plan. The division was chosen to target the most number of users while minimizing the work needed to create an effective campaign. As we can see, even with 100% success this targeted approach still results in a $3,798 loss in monthly revenue. The second plan assumes an 85% retention of users from the Basic plan, which is the minimum needed to see marginal change to our monthly revenue.
Based on this analysis, it is highly recommended that we do not proceed with phasing out the Basic plan without a solid strategy to retain at least 85% of Basic users, or to supplement the loss of revenue through the Premium plan.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='74167' id='3' is-fixed='true' name='Revenue Comparison' show-title='false' w='98666' x='667' y='25000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A8EB6E73-D54D-450A-BEAC-E337D44B867A}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='# of Users by Plan'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Calculation_2339338545753182209:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{31BBD7E9-3BA7-4BF4-A45B-316E23AA28D5}' />
    </window>
    <window class='worksheet' name='Rev/Month by Plan'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D837E29-A937-4C7E-89AF-4524EC27F198}' />
    </window>
    <window class='worksheet' name='Geo Map'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='30'>
            <card type='columns' />
          </strip>
          <strip size='30'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='249'>
            <card mode='radiolist' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C6F125BB-50C8-4D00-B03F-94978D58B548}' />
    </window>
    <window class='worksheet' name='# of Users by Country'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='45'>
            <card type='columns' />
          </strip>
          <strip size='45'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='249'>
            <card param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Calculation_2339338545753182209:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Basic&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Calculation_2339338545753182209:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Device:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:User ID:ok]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[yr:Join Date:ok]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[yr:Last Payment Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{289D7121-918C-474A-96D8-B0528597257C}' />
    </window>
    <window class='worksheet' name='Revenue by Country'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='44'>
            <card type='columns' />
          </strip>
          <strip size='44'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='249'>
            <card param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Calculation_2339338545753182209:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Basic&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Calculation_2339338545753182209:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{627ECCCF-626F-4BBB-A268-07AFC9ACBECB}' />
    </window>
    <window class='worksheet' name='Join Date'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='44'>
            <card type='columns' />
          </strip>
          <strip size='44'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='249'>
            <card mode='radiolist' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[dy:Join Date:ok]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[mn:Last Payment Date:ok]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Calculation_2339338545753182209:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[yr:Join Date:ok]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[yr:Last Payment Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5BD7A9F7-689D-4D2F-A8F7-4268DD42C5BF}' />
    </window>
    <window class='worksheet' name='Last Payment Date'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='44'>
            <card type='columns' />
          </strip>
          <strip size='44'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='radiolist' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[tmn:Last Payment Date:ok]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[yr:Last Payment Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B0E87592-601F-4491-B9F2-6CA16B5B8E5E}' />
    </window>
    <window class='worksheet' name='Age Stats'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Age:qk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:User ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{443306D0-6EDA-468E-B801-73E466736809}' />
    </window>
    <window class='worksheet' name='Age Bins'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' type='filter' />
            <card param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Big Three]' type='filter' />
            <card pane-specification-id='2' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Big Three]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[io:Big Three:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Age:qk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country (Netflix Userbase2):nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase2):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02425B61-2B5C-4AB2-ACB2-FDE8DB4BA9DB}' />
    </window>
    <window class='worksheet' name='Age Groups'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='44'>
            <card type='columns' />
          </strip>
          <strip size='44'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='radiolist' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group)]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Calculation_2339338546062606341:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6FB95D95-05F9-4264-BA37-3EE1F1F3AC4B}' />
    </window>
    <window class='worksheet' name='Device Type'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='radiolist' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Device:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD5DC4AF-B59F-476D-B1BC-B5AFBF1819B5}' />
    </window>
    <window class='worksheet' name='Device Stats'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='radiolist' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Device:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{69F2B2AC-99F2-4BA7-B0F1-ADE8599D17FD}' />
    </window>
    <window class='worksheet' name='Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='36'>
            <card type='columns' />
          </strip>
          <strip size='36'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Big Three]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{274BFA5D-A561-4A84-A331-9B16173425C8}' />
    </window>
    <window class='worksheet' name='Gender Stats'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Device:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C03F691D-F547-4C19-AA19-31118AF86AE5}' />
    </window>
    <window class='worksheet' name='Rev/User v Days Subscribed'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]' type='filter' />
            <card param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:User ID:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:User ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CA94476-24EC-42D8-8C01-536FA1F0BF65}' />
    </window>
    <window class='worksheet' name='Rev/# of Users'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='36'>
            <card type='columns' />
          </strip>
          <strip size='36'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]' type='filter' />
            <card param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]' type='size' />
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group)]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Calculation_2339338545753182209:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Device:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C305016D-D819-4CB7-AA7F-F0BC65E46638}' />
    </window>
    <window class='worksheet' name='Rev/# of Users (US)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group)]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Big Three]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Calculation_2339338545753182209:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Device:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7115A478-AD56-45FC-8A57-62251DC73F99}' />
    </window>
    <window class='worksheet' name='Rev/# of Users (Italy)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='36'>
            <card type='columns' />
          </strip>
          <strip size='36'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group)]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Big Three]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Calculation_2339338545753182209:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Device:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{37C402B9-016D-4716-8077-0E1D797CCB11}' />
    </window>
    <window class='worksheet' name='Rev/# of Users (Germany)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='36'>
            <card type='columns' />
          </strip>
          <strip size='36'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group) Traditional]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Age (group)]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[Big Three]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Calculation_2339338545753182209:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Device:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9F3F08F1-AA3D-4D27-A0E1-475A13B5B8C5}' />
    </window>
    <window class='worksheet' name='User Comparison'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='36'>
            <card type='columns' />
          </strip>
          <strip size='36'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[:Measure Names]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Calculation_2339338545753182209:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase1):nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase2):nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C8BEC283-3942-4E4D-A97B-E3EAA28FE28A}' />
    </window>
    <window class='worksheet' name='Revenue Comparison'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[:Measure Names]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Calculation_2339338545753182209:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase1):nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1CFD1A23-CFF8-446D-AD12-28AFF5BE576F}' />
    </window>
    <window class='worksheet' name='# of Users Plan 1'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='36'>
            <card type='columns' />
          </strip>
          <strip size='36'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[usr:Calculation_2339338545734172672:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Calculation_2339338545753182209:nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country (Netflix Userbase1):nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase1):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{44B227B9-CD19-4EB2-8993-375B00E43CAE}' />
    </window>
    <window class='worksheet' name='Revenue Plan 1'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue (Netflix Userbase1):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country (Netflix Userbase1):nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase1):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DA289309-7A55-46DF-A1F4-C8E1B2B35705}' />
    </window>
    <window class='worksheet' name='Rev by Country Plan 1'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country (Netflix Userbase1):nk]' type='color' />
            <card pane-specification-id='0' param='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[sum:Monthly Revenue (Netflix Userbase1):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country (Netflix Userbase1):nk]</field>
            <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type (Netflix Userbase1):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AED58C62-3326-48E6-8F9A-8A446FCAFB59}' />
    </window>
    <window class='dashboard' name='Initial Analysis'>
      <viewpoints>
        <viewpoint name='# of Users by Country'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <fields>
                    <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Basic&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Geo Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Rev/Month by Plan'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Subscription Type:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{26174214-7735-466F-AEC6-8830317426D0}' />
    </window>
    <window class='dashboard' name='Age and Gender'>
      <viewpoints>
        <viewpoint name='Age Bins'>
          <zoom type='entire-view' />
          <highlight field='[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Country:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Gender'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6D73C1A5-E96E-46B3-AC6F-8D097931FD20}' />
    </window>
    <window class='dashboard' name='Big Three'>
      <viewpoints>
        <viewpoint name='Rev/# of Users (Germany)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.12x6gvh0kqwi6818ft4on0a6hrha].[none:Gender:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Rev/# of Users (Italy)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Rev/# of Users (US)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{798B54B8-D95D-4772-AD40-245E7118146E}' />
    </window>
    <window class='dashboard' name='Revenue Comp'>
      <viewpoints>
        <viewpoint name='Revenue Comparison'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{1F35480B-C030-41A7-9902-C6C570240B13}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='127' name='# of Users Plan 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='148' name='# of Users by Country' width='192'>
      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
      jjgMJ/Bp/j8DF6lzm528JAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='# of Users by Plan' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Age Bins' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAMX0lEQVR4nO3dXW8jVx0G8Gc89thOHMeJ8/6e7CbLpiwUUFtpJdSbSlUBtUIUhMSHQHwE
      xCdAXCIEFwi4AgGFC4pQEXTb0qy2XdhtwmZfspvNbt7jZPw2njmHi2y2bOPEZxzPxM55flcb
      Z2b898ZPbB8/GRtSSgkiTUVOegDmh1rZiQNg23Yj5iA6FScOAFErYwBIawwAaY0BoKYU1uIK
      A0BNKazFlWgo16IJKT0s3LwJM5nG+ckxSClhGMah32aGYUBIiciT7xmG8cz3KDwMQAO5u48R
      y46itPUYt25cw/ziA4xNzyCdSmFvYxV2qQwrmcLkQCfe/dfHuPC5WXiihKgRQ3smA8+LYHyk
      77RvhlYYgAaKprLI3bqJspTo72zDhdlZRGJxTI2P4D4k2hwHVjyGre1djA50oYI4zk8NYnun
      hOU7C/jiS5dP+yZox5D76n7RYds2UqlUg8fSi6iUsPRoE5Njw6c9StMI6371NAD5fL6uAxQK
      BbS1tVX93kGwIpHar7U9z4NpmkrXqbotj9nYYwohYBiG0uuUk8553P2qkbctCuy/8KqVtkrR
      xu2lZXT3DsDeXoWZSGN8ZBBSyiP3FUJASqk0rOu6iEbVnpGpbstjNvaYnuchEokoBeCkcx53
      v2rkbVNeBo0m2mCZEoVCCaMjIyjU+YhB1EyUA+CUSugbHMLuziYWbt3FuXOTQc5FFAr1R4BY
      FJsb25ieOY+O9jasb2wFORdRKJSXQc2ohfGJCQDA+NRUUPMQhYpVCNIaA0BaYwBIawwAaY0B
      IK0xAKQ1BoC0phwAzy3j9uIi8qUK1h89RM4uBjkXUSjU/x5AGujJZrB09xYsKwVv9wHSM9NQ
      qVKrVq39VLJ5zPCP6bc2f5I5a11Xo+ZQDoARMbG3Z8OMAKZpAdJ5OqQQ4sgrVh30oGrbyG15
      zMYe8+Bn3cjrP2q74+5XjbxtygGolPLIF8vo6R9FYWcN7V09iEQiiEQiR9ad/dShVbfzsy2P
      2dhjAlCuQ590zuPuV428bcoBiLenceFCGgCQzXSo7kbU1LgKRFpjAEhrDABpjQEgrfG8QKQF
      z/PwweIVOMJ55nIGgLQghMCvPvoFtsqbz1zOp0CkNQaAtMYAkNYYANKary7Q7XsPkOnuxe7W
      KqxUFyZGBoOcjShw6ucFspIY6O3Ctp2HbRcQE1EI0Q8hBFzXPXI/1UZorePUsy2P2fhj+mn3
      nmROz/OO3L+e2+Z5XtXvKweglFvH/XUb54czsO1OSK/8tA161MlHeXLcs3XMME+Oa5rmkfvX
      c9uOCq5yAGLJDvSkPbhGEqODXYgl2Qil1qcegEQbhoYOztde/bztRK2Gq0CkNQaAtMYAkNYY
      ANIaA0BaYwBIawwAaY0BIK0xAKQ1BoC05rsO3dndB8feQqw9g6H+niBnIwqccgCi8Tb0Zzux
      k9/GysMNDIzGIYRgHVqzY2pbhy5sr2JpfQ/T4wOw90ooFwusQ2t2TK3r0FZ7BkM9EUjDwrmp
      McCMq+5K1LTU69DxBPr6Ek++Shy7LVGr4CoQaY0BIK0xAKQ1BoC0xpPjhiify2Hzpz+r8h0J
      4Oilxc7vfgedIyOBzaUzBiBEwnWBuTnf+8nXvxHANATwKRBpjgEgrTEApDUGgLTmow5t4/a9
      ZaS7+9BpuVjZcTE9MRTkbESB81GHbkdvVxr5ShkrORsSJuvQPrcVQijtd9xxTvu261uH3nqE
      e2u7OD/Si4c7Dla3bMxMT7EO7WPbSKS+Z5z//3/MOvQp1aHj6SwmjQRiyXbMzs5i2q2eKKJW
      ov4UKBZHd/enfwMQi/E9NGp9XAUirTEApDUGgLTGAJDWGADSGgNAWmMASGsMAGmNASCtMQCk
      NeU+g1O0cWfpAUyrHRGvgELFwKXZC0HORhQ4X58UH49GkM52w8sDFhKsQ/vclnVo9e2arg69
      t/YA63sO2jrzuHN3GcMTUzw7tM9tWYdW367p6tDp/nG82L//7/7eftXdiJoaXwST1hgA0hoD
      QFpjAEhrDABpjQEgrTEApDUGgLTGAJDWGADSGgNAWvNdh45E4yjt7SDWnsHFmakgZyMKnK86
      tGUaSGUSKMXH4To51qF9bss6tPp2TVmH3sx7SHUlYO88gJXqZh3a57asQ6tv15R16BeetKD7
      erpVdyNqanwRTFpjAEhrDABpjQEgrfFjXugZjuMcuWQohIBhGFVXgSzLUlrtazYMAD1j609/
      Rvm3v/O9X/YnP0YqkwlgomAxAPQsIWBUKqc9RWj4GoC0xgCQ1hgA0hoDQFpTDoDnFPH3d9+D
      cEu4+uEcrt9YCHIuolAorwKZVhKDfVkAgIQEIM9EHXr7+nW48wuQUiq1HA+2S7/xOuLxuK/r
      b4U6tGrdudb1nbk6tFPYw8b6BlKpdsStBKKx2JmoQ7v/vYXKH/6odL0HJAC88XrtY7dgHVrl
      l0CtGRsxZ9PVoa22Dly+fBkAMDQ4rLobUVPji2DSGgNAWmMASGtVXwPk1xYxN7+G5c0cvvfN
      18KeiSg0VQMQ78ii4DzGV7/yXNjz1E0IgWKxeOiyWisvRy2PUfMql8sol8tK2x7cB3wtgzqF
      XTiuh6iVrH/KkDmOg/Xv/wBGoeBrP290lJXYFvPLuZ/jH0t/87VPKtaBaOTwT7rqzz6W7MTW
      43tYut+BoYHe+qY8DULA8P1mU31v/NDpkVJAwN/P+ajtqz4/KO+swEgPolzI+Z+OqIVUDUD7
      wAxm+y1YHS3025+oDlWfAtkr81h8lEd7ur7uClGrOPQIIKXEncc7kI6N6YnJ05iJKDRVnwKN
      n5vFa6++gscPl55e5jlFvPPPK5DCxX+uf4SV1Y3QhiQKSpWnQBIfzV2BXQYyfaNPLzWtJIb6
      e+C5eeRyDipYw0Bvd9PUoeutGtfruLruAdahg6lDN3LdruprgMmJMXSNXUKH9ellTmEPhXwB
      6zsuJsb7YMRTTVWHVv1hN8pxdd0DrEMHU4eub8LqqlyDgcUb12DfzWGwN4MXv3QJwH4d+vnn
      n3+yTbaBIxCdnkO/kgzDwMuvvoFoZQ+FgtrbzUStqupjspPfhhtJwLb5RhidbVWfZCWzE/ja
      K8Mwo7Gw5yEK1aEASCkx987v8ThvIjv+HC5f4gfh0dlV9RFAOCUUC0C+dDrniHz09l8hlpeP
      3kBK4DOrFSLZOs1Vv3LvvY/8u1f2v6hy26uRiQQGvv2m8kqQrg797xiGgS+//HVcLLuItnWd
      xkyoXL8OfDjnax+vp6ehy2PNxLt5E8bSfV/7iEwG8s1vBTTR2VG9Dp3oQCwR9ihE4ePfBJPW
      GADSGgNAWlMOgBQuPpnfPyFu2d7G3eW1wIYiCovyGpnw9v+qUkqBpZVVwLAgRE8wbdA6G4lh
      CrMNWi/P85TKbWyDKohEo4hAwCnuoVSqYDOXw8z0VDBt0DobiWEKsw1aL5UZAbZBlVRKBVgx
      C7mixBcufR7FEoty1PrUzw6dTOHcudTTr5NJvlFArY+rQKQ1BoC0xgCQ1hgA0hq7snXaeOst
      7OR2j91G4tklu0qqnb9xmgwDUCfv6jUY931WlMfHGIAmw58HaY0BIK0xAKQ1BoC0pl6H9lzc
      uDkPKQXuLC7g3oOVIOciCoXyKpCUAoZpADAwPDyMO/dXIYTQtg7dCliHrk19GdQwIdwKHKeE
      +YXbmLl4MbiT47ZAHboVsA5dm/JTIK9SRrojjb18EdnuLuR29xo4BtHpUH4EiCXaMDY2tv9F
      d3dQ8xCFiqtApDUGgLTGAJDWGADSGgNAWmMASGsMAGmNASCtMQCkNQaAtKYcAOFV8O8bn+zX
      oW/NY/nRepBzEYVCvQ0qATMagVexYcazKBd2IUSWdegmZq+twVQ4Ia8Q4umJe91Sqa7rOvt1
      aABOqQinIlHIbwMGWIducrkf/giR3eNP3fJZ7vhYXacKadU6tI/PB3DR19sHxzMxMtSLaCJV
      eyeiJqccgGg8iaGhs/tZvKQnrgKR1hgA0hoDQFoL9NygQgh4nqf04XAHK0YAuAxKoQk0AFvv
      f4D8r3/jez+ZTvOsvRSKQO9nhuPA3Nz0vZ+bag9gGqLD+BqAtMYAkNYYANIaA0Ba8x0A4ZXx
      8bVruLlwO4h5iELlfxVIAhXXheFWap4dWsra6/90NuxcvYpC5dP7gZSy5ol2ZUcKXS+80Dp1
      aACQwoVpWjAMo2Yd2jD4DEsXzl/ehljy96GB3uQksi+9dKp16P8BmaurwUDAqfUAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Age Groups' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Age Stats' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Age and Gender' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Big Three' width='192'>
      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
      R8S7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Device Stats' width='192'>
      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
      NP8/jBgUxJtWf0YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Device Type' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Gender' width='192'>
      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
      msT+BsVkowAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Gender Stats' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Geo Map' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Initial Analysis' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9eZRc93Xf+Xlr7XtvaKAbQGMHCYK7uIoWSUmkJEt2ZEl2vMhxHDmeOHYy
      GWc8yUzGJ2c8yYyTiT2ZLDOOLSe249ixLSmyFoqyKFIiRYILSJDYGo3e1+raq169qrfOH4VX
      qKqu7q5uACQk9PccHrCrXr3l9+69v7tfwXVdlx3s4BaF+F7fwA528F5ihwF2cEtjhwF2cEtj
      hwF2cEtjhwF2cEtjhwF2cEtjhwF2cEtjhwF2cEtjhwF2cEujgwEcqtUahUIBcKlW9Wu+QK1W
      6/FIm1rNXPPp3PRlFlcyaz6vahpOl7NUq9Wt3eAWYBk6S+m196JXikxOz+G6NtNTMzhXYuvZ
      9BLFik4hk0Y3bHS9Yz1dh/n5hWu6p16ft/f30ALXYWZqGtt1SS/NU9ENyoUs6Vxx6+fCoVar
      X/3TrlPp8r4rmraNc7djKzQg/fqv//qvX/1TYGZmmtz8JPhUciWL9PIcSiCCaGmMT8wjyw7T
      M4tIgs3c7AxKKE69kmN6YRW/5HB5ep6gX2by8jSRZIr5qUuspFcJBgNMTV5GlUWmF7IIbp25
      xTR9yQTfff5bBKJ+zr15GcmvUsqtUKpaRCMh8sUyuWyGkCoxObOIItnMLKyiKBKSbXBpZoFU
      KsnC9GVWsmVKpTwBVWRicgZVEpiam0VSQqiYjE9MoAZCTF+eQBRFpmcWEQSDmbllEFxCPshm
      8lyemcc2DU6depVIOMTc/BKJviSnT71MOJ5gaW4WZD/pxWkkfwRRFHErK5yZyjC2b4jJmUX6
      k35m50sUcytYtkN2eY6VbJmBgX5K+TSTMws42hKXc7B3KM7ExQuYyNT0KrquU60UKFQMnOIs
      L15YJSqZzC1nWJy4QAWFeilLtqiTz2VJpVJks1l0vYpWyrOar2DXyyymCwh2nWyhwuT4WSzR
      R62cYzVfoV4pkK/UMLQiK9kSiXiUxdkp8pU6b58+RSCaJLM8T2poiMlzp6mp/eRW5tCqOlqx
      SGpggFw2g67r1LUSC6t5RLvOzGIaWbBZzRbIpRewRR9Bvw8wef2V04g+P+XcCoZlYbkukxNT
      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
      /5qqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Join Date' width='192'>
      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
      rv4f7jPPGaRTzhEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Last Payment Date' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rev by Country Plan 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rev/# of Users' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rev/# of Users (Germany)' width='192'>
      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
      OqCrs42VtS1C45MYtSrp/R2cnhdluPHQiHSBpAtkipThvqEV/wOdZkwzAwAQi8Vwu92srKxw
      9+5dHA4HCwsLDAwMEAwG2dnZYWRkpCW/vy3x0Yji8vr6669ZX1/H6XQSCoVwOp1kMhlWV1e5
      ceMGi4uLxONxRkZGLnqqLUG2QV8jtVqN5eVl4vE4v/zlL9E0jXv37pHP53n//ff54IMPWF1d
      ZXt7m1pNtiYAeQv0ur0FstlsbG5uUiqV2NnZ4Z133qFarfLZZ58RCoUYGxtjc3OTUCjUkt9f
      uQb4hlb8D3SaMXIR3LrrkLdAwtIkAMLSJADC0iQAwtIaKMPpLNxfIHztOg49R90ZwKHnSKSy
      hELDbGxsEZ6YosNpYyuy9sqdYCFakflL52qRXKWOt9MD9Ro78TyjY/3ks2keR3aZnZ5kcytG
      ONiLoXVSyh1SwkYbipJSuKQLJB+MZULLfjCWYXMRDgXZeLLKzMwIUGQnGqGzP4R2sEMulweb
      AzQ71WoZpV5MyKFpx9tasg16fucA2QZtdIzpUTaHi2o+S2h8itjWNgZ2nG43yb04V8Oj7O/u
      Eg4OUSiU6etux+kZOv55ACfyWyJFa5IbYfIKYPr404xp9XXILpCwNAmAsDQJgLA0CYCwNAmA
      sDQJgLA0CYCwNAmAsLQzleFcqsBuusB48Aqra1KGE5fPmcpwmq3A1S47//sozpuzUob7NlKG
      a911nKkMp+s1cqU6HhdShvsOUoVo3XWcqQwXDgXZT+eZDfayvR2XMpy4dKQMJ68Apo8/zZhW
      X4fsAglLkwAIS5MACEuTAAhLkwAIS5MACEv7P7h1fuf61GwlAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Rev/# of Users (Italy)' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Rev/# of Users (US)' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Rev/Month by Plan' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rev/User v Days Subscribed' width='192'>
      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
      P3XMy/kB9cFCAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Revenue Comp' width='192'>
      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
      7uuKYOlH/wWM8rDv0xGLpgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Revenue Comparison' width='192'>
      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
      03/SQVNfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='127' name='Revenue Plan 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAB/CAYAAAC5QM2nAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAfmklEQVR4nO2deVyU1f7H38CwCIoKuCCaG0buC2MB5oImrqTmgkKl4fWKmpZ7Vkpdb3Fd
      0tTbzSUV5KLk0nVBUxESLMQcSjEXEC1XEgVlZEYGZji/PwZQZBu20N8879eL14s5z/f5njNn
      ns/znOec8z3HRAghkJAwUkxruwASErWJJAAJo0YSgIRRIwlAwqiRBCBh1EgCkDBqJAFIGDWS
      ACSMGkkAEkaNJAAJo0YSgIRRIwlAwqiRBCBh1EgCkDBqJAFIGDWSACSMGkkAEkaNJAAJo0YS
      gIRRIwlAwqiRBCBh1EgCkDBqJAFIGDWSACSMGkkAEkaNJAAJo0YSgIRRIwlAwqiRBCBh1EgC
      kDBqJAFIGDWSACSMGkkAEkaNJAAJo0YSgIRRIwlAwqiRBCBh1EgCkDBqJAFIGDWSACSMGkkA
      EkaNJAAJo0YSgIRRIwlAwqiRBCBh1EgCkDBqJAFIGDWSACSMGkkAEkaNJAAJo0YSgIRRIwng
      mSGBFf3lyOVy3ANj0dZ2cQwlNhC53I+Qa4UJBMrlyANja7NUpXMtBD+5vp7lcrkkgGeGhGi+
      Vw4iMLAvuSdOcbYGsrgW4odcHsgzemn+pQxbpUChUEgCeFa4EB+LsmcPPDw86Kn8nuiE2i5R
      ZenDpwoFik/71HZBDEISwDPBBX44nIqLmxx7+/Z0clQSG3+hiEVJd++n07Sp0QT5e9FbLkcu
      742X/xK+TVQC1wjxkzN6XRJwkDkFTYD8ZsqTfpSxQYzsLccv5Bqg4sKeJfgP88RdLkcud8dz
      zDxCEpVlfBd9Xk82gdJiVzN9fEG55PT28icoOvWZaOZJAngWuHaauFRHPHq2BDrg1seW1KgT
      JFfISTr7/rGASMfZ7IlToIg/Qsj0tpyM+Q1oycQwBXtmugDDWKXQP/6L3aWvhTHzo59o3HcU
      /ZzrAg+4ndGWd9bsI0ahQBG3jw87nmPd+//h5wpcvam3YcjHIRyJV6CIj2XjeB37Fyxmz50K
      fcEaQVbbBZCAa8ePkmTbhzkd9J+7vtIb829jOXltKi+2NNRLFllKsHnJCTsLAGsc5RP5Um7o
      +Q/Yt+08Pjv3MtTx8WXx2pSJj00sGjPQ53XWHozj4i142cCydR0/m66Fn6xp7+ODx3+WcCEJ
      aGJo+aqXg3PkHEQSwDNAOor4JOjux0v5KbKOXejGQU7E32FiS0OvkJb0e70r36yYykBFL3y8
      xzNoeDdaWxv6E9+jo98XRS5+AGXit6z8chsnLt7hYW5BqouBPvVoU6NZt3Qj359LIePR4/Rh
      FfJSvQxbpeDTPpIAap/04xw7DbCEvvIlRY8d/5F0n9HYG+iqpc9mooakkHj4GOEH5hOyXEuH
      2SFs8GtjwA/tjHObp6zu7GHh1C9Rv7mOb9fLaWyBvhtx9FEDSwRoE1g9aQHHugay4ciQfEHG
      EiifY7iPGkR6B6hlVKfiOG0+jFXx+e3y/L8ji3rC6ThOqSrmz8LWGfm4AFaGRhI2/QXO/juM
      nytbuKRETuf2Z+LU/Iu/Mtz6jTPpbfEJ8K7A0+ivQxJAraIiJioGPF7B9alrw17uhgsxRMXo
      FeDQqCmQQspVLWjVpP52gJ1RqU+cEce6v68mMkVJDoA2B40WqGOFZb5Fy07dsCWeqOgMtEBO
      Tk7ZxWvajBc4SdQPGWjJQZkSSdDHwVytyFd0aIqT+RWijiWTgxZ1qoKQeauIroiPGkQSQG2i
      TeBUHPT0eAWbp4+17ImHI8SdSkAL2HjNYNGrmWwa54b7wLdZGmmF26uOT5zQicHe8L8PRtBX
      LkfuNoDpRx2Z+eVUXAtMXKfy5czOnA30wk3uzqA1v5Zdvhcn8MmUF4lb4oWb+yBmbMtg2PxJ
      tKnId7QZwOzFQ1GF+uIh98R36QlazJ1F/4r4qAEOztF3yZoIIUQtl0VCotaQngASRo0kAAmj
      RhKAhFEjCUDCqCm3Y1ahUPwV5ZCQqBWkXqAaZm3CmdouwnONOievRv1LTSAJo0YSwHNItkrF
      /1Z9QbaqgvMkJADQqFQcXLsKjUolCUDCuKnaO4A2g1/DPuez4J/442Eu1LHDufMQ/GZPxrud
      bTUWsyLoZxqmzNxD2ESDJ9MbzrUQ/Eavwzl/Om15VOc7QE52NtGh24jZsR21MhNzS0s69e3H
      8Onv4tC8eaHdo4cP2b9uDacPRqDNzaXxCy8w9oMPaSfvWcTfreQkwj4JpHO/fgz5e0CRY3l5
      eSgOHeTI5k2k37qFqZkZHV/tzfiPFmPToEGpZdSoVfxv9Sp+jjgAwMvDvRk1ew6W1jYVsimg
      Ot8BcrOzid0eStzO7aiVSswtLavyBFARFzSBKdtNmbgtBoVCQfyRED4eks323Y9/dCkQu/o4
      vHE9t5KTmLvtv/TzfZMPd32Hk3M77l6/XmijVirZsmAe9Rra8VlkFKviT/PW0s/JefR4Iv6j
      hw/Z8Y9P2bJgHlZ1i190AN+tXE7C4e/xX7aS1fGnCYr6AftmToR/thSdtuRwMJ1Wy+7ly8hR
      qwmK+oGgqB/IUavZvXxZ4TmG2NQUxzZvIPVyEtM3h/LqeD9mb99dFQEkcGRfOi6+M/BuoZ8r
      K7N2pJP3InYsej4Cop8nslUq0q5fx3vmLOo2bAiAdf36DPSfTHsPj0K7c8d/oFGLFxgyNQBL
      axtMTU1p0b49HXs//k1+jjhAqy5d+HDXd8WeCgV4jBpNwNp/4/Tii5iYmmJpbUM/Pz+U6fd4
      mJFe4jmpKZd5cOcOb8xbgKW1DZbWNrwxbwEP7twhNeWywTY1gUal4t6N6wyeNpO6DfLrz7Z+
      1d8BlFmlvYiVHYhNWiyrp4/Hq3d+em8v/IOiSdUWPV8eGMmNyNVMH9lbH1A9cglH0p7IRptK
      dJB/vh93PN/6msQi5UgjdvV0xnv1zl8Lpjde/kFEP86I2EA5cr8QrqHlalgAnu5yCmO6lYmE
      zBuDp7v+3JEfR5DKX4+ZTEaeTkf6zVul2uRqNJz9IZpurw3ExLT0n7bvBF/cR47CzNy8VJtm
      7doV85GdpcLSqg7mllYlnnPj0iWatWtXKFCAug0b0qxdO25cumSwTU1gml9/GbeL1l8VBODK
      oBH2pG6dzcwQBWnFppaXE4itj5Qm5Eg8CkU8sRvHo9u/gMVPR0rH7+eQlTf/2nkCRdwmRukO
      sSykYM0QFXFBk1hw3IGZ22KJV5zkyFe+TwXspXKbIXwccoR4hYL42I2M1+1nweI9PB2TrYoL
      Ytr6TFyHj6J7E4BrhM2cyvq7nqzYF4dC8QPbF3rSqPKVVmnMLS15beIkdi0L4vCmDWjUxW88
      2aosNGo1t1Mus/ItX2a/7Moc95fZNOd9HqRVLQL9QdoddgZ9xsvDvbGpX79Um4ZNHYulN2zq
      WJi/ITY1gbmlJX3fnMS+lf8iasvGwvqrggBs8Fi0g03zX+FB8EyG9vXkrXnribxRTpBFAV3H
      M9u7E47WMkCGdXsffDzgzIWkonZuY5na2xlbC8DCDnvbJ5466YcJ3aek/5xAvFtbIwMsbOsX
      BoDkZ8T42d50ctQfl1m3x0efEUVy0iYSHGHHioM7WPnRR4x0ARJ2svm8I5M+moG8sYW+nPVs
      ai2OtE237sza9A15Oh2/HD3K8gk+KA4dROTpXxR1Wi0P7vzJnT9+Z9Lny1iV33Zv1OIFdvzj
      0yLvAYYi8vI4cyySL/0n0XucD66Dh5Rp36Bx43LTDLGpCVp17cbf/7OJPJ2OxGNHWTNxQhV/
      S5kd3X3+QajPxyhTTrHj38tYMiqM8Pn/ZbNPOT0w2lSi1y1l4/fnSKlspPT5RE7Thpkvlfwi
      l58RqdHrWLrxe86lZPA4p6cyumvF4E0z6PJE59W1386gpDPtX6xAmWqYBo2bMDRgOiYmJnTp
      15/9/15D+u3bDPrbFABsGjRk4CR/7Jo1A8DS2gavyZPZsmA+qVev0LJjJ4PzysnOZu/qL7hx
      8SLvfr0RhxYtyj3nQVpauWmG2NQU9Rs3YeCUaWBiQse+ntU1DmCBrXNvpn65lzVjzDn75Tbi
      yrTXkrB6EgsO18Vvg75polAoWFUDywRoE1YzacFh6vpt0K9Lo1CgKCkjxxdpW1s9t5XCBCcX
      F/w++QdJP8fzMCOdOnXrYmVjw72bN4tYWtvWp2HTpuRmZxvsXZuTw87P/4mVjQ3vfbPFoIu/
      QeMm3P+z+BvS/T9TadC4icE2fwUmJiY0a+dSBQFoc8gp1mslo4mjI+Rqy1n16xa/nUmnrU9A
      YdOlUjg0xpFU0u6VkdNvZ0hv60OAd2sqGpOtj8NN427JnR5/KSIvj7y84n3iMpk5eVodeVod
      ltY2NHdxQXH4UGGzCECVmcmDO3ewti257V4SBX30QwOmI7MwLCK+xUsvcfvyZbLu3y9My7p/
      n9uXL9PipZcMtqkJSqu/ygvg1g6mjZnHhhMpKPVR2Kh/P8BX25OwHzaAbvlmJQdiO9DUyZwr
      UcdIzgGtOhVFyDxWVTRSusNwxrgo+W7tV/yaoQ8W/z0yqkgvkENTJ8yvRHFMnxGpihDmGZiR
      Td8RDLM9zcZlB7iRA+SkoYiKr5VeoMx7d1nzt3f4cfcu1JmZgP7C+X7jepo5t8PWwQEAjzfG
      cO23cxwL3oouNxeNWkXkls00dHSkSevWBuWVq9Fw8WQcr44ZZ/DFD+Do3I4GTZrw3crlaNQq
      NGoV361cToMmTXB0bmewTU2gvHeXDQGTif9uN2plfv09uF8FATh5M3+yE2e/eo8RfeXI5W4M
      mhpG1uDlBC/uQ2FrosRAbBsGzF7MUFUovh5yPH2XcqLFXGZVOFK6JX7r1jIubzfTvdxwHziV
      cJyL9ALZDJjN4qEqQn09kHv6svREC+YampFNHz5aP5/OycsZ5SGn97jlnG/YrlZ6geo7NGLM
      /A9IjI7i87FvcHz7f/ni7Texd2rOyDlzC7ssHZo3Z8oXX3I5QcG8Xm4sGuBJtlrF6HnzMZPJ
      yFapWP3O27wn78578u4c3riBwxs3FH4+cywSdWYmN5Musdp/YmF6wV/g0MGFvTVnjkUW+Wwm
      kzFmwUIsrK1ZNMCTRQM8sbC2ZsyChZjJZAbb1AS2Do14fc4CzsdEs9p3DD+Gh/GfyW9J06Fr
      mpqYDp2tUvH9hvUMmRqAlU1ZHQDPPzUxHVqjUnFs8wZemzxVmgwnYdxIT4AaRgqIqRpSQIyE
      RA0iCUDCqHn2Viv9f8axy8/AIMJzzPAONdvnJj0BJIwaSQASRo0kgFpE+0jN+dCv0T5S13ZR
      jIpslYpdK1eSLQXFSxg7VXoJvhbilx/xlY95PZq09+L9T+cysEVltxSpGvoywcw9YdRETHx1
      oNNouBKxk6uHvyM36yHXjkXQxNWdl3z8sWnSrIit8toVfv16OU3lvXAZ83a5vpN2byN5z7Yi
      abI61rgt+hcN23UoUoaUA99yKy4aj49XYGXXqFJ+nuZuooJzW9eh+vMWNk2d6PzOTBp1kVfY
      pibIyc7maEgI0WFhqDIzidm5szp6gYaxSvEpfQCt+nd+WDaHReOmkBYegt8zegHWNkl7QlD9
      eZve//yKP47uo/XgUdz6KVp/QeQLIFedxYXQ9aRfTMTKzsFg36o/b/Lygs9o0v2VEo8LIbh7
      9jS/Bf8bG8fmmJmXfKMqz09J3E+5SOLmNXT522wcOnbj3vkzJH6zmh4zP6Shc3uDbWqKA19/
      zd3r11kUFsbxb7+lv69v9TaBZNatGbh4NsM4z/6oCm2kU220nBiGQvHs3v21j9SoUm/RYcLf
      sLTVLy9iUdeWdiN9adz1cYD6jZijNHyxA/1WbsG+Q7fS3BXzrX2kpo596V2HmvvppJ7+kVc+
      CKLrlNmYlRDfa4ifpxFCcD36EM6vj6dR5x6YmJrSqHMPnF8fz/XoQwghDLKpKQoWFRj1/vvU
      s7MDwKZ+NQTFF0PWkjZt4Mo1fVBGWQHnRXY2d/dkzLwQHm9Cnh8U/0EoJzbMY4ynuz4ofd4e
      ktN+5dslb+kD1d2H8/6eq4/jD2IDkcv9CLlWyucS0vRLt3xA6IkNzBuj3xW998h57ElO49dv
      l/CWpztyuTvD39/D1Squ3GFiZobI06FKK3tSdZshb/CC51BMKzBDUvtIBUKU+cSwsnOg65Q5
      2DR1qpKfp8lVPeRR+l0cOnQtku7QoSuP0u+Sq3pokE1NYSaTkafVFgsWqn4BaK+QnAQubYre
      gosFnKviCJr0T64PWKOP1IrZhp8IYerCp4LVk1J40Gsu2yJPErdlDKbHg1j41U06TttA5Mk4
      toy34MeVVdgJ8XFGpDzoxdxtkZyM28IY0+MELfyKmx2nsSHyJHFbxmPx40rCqpiRmYUlzq+P
      59yWtSTvCUVbiTjd0si+n05G0nmOTHmDAxNe49DEYfy84mOybt+ocT95ORpEng7ZU4tbyaxt
      EHk68nI0BtnUFOaWlgzy92f7558TsX594bKS1ToSrFX/zvefLOOIeU8WDX5CANpEgiPasOLg
      jsKY2/Q9oexr8CY7/dpjDUALRk0ezZa3j/Fj+mhGF2yO22UA3p3yVxHo0p3OhMIAbx4ndYbQ
      8iLQDKELA7w74Zj/f/fOEErxvKtj7SY7l070ClzFlYhd3I4/zr3zv+AydhJOvQZgYmJSab8N
      2r7E4M17Cz/nZj3kyqHdKFZ/Qs95S4u9YFe3H4u6tphZFF2SwMzCEou6thWyqSmcu3dn3pYt
      RIaEoDhyhEunTlWvAGTWrfFefgTvYge6MOPziTz5TDifeBp4alGmDjM4YCTbEVjZNcJl7CQw
      McFlzEQ0DzI4uXQuru8txrJ+w3LPNwTzuvV4adw7mJiacfPEMYN6kSrrx9TCkly1Cs2DDGR1
      rAvTNQ8yyFWrMM2/6A2xqUkaNmnC6zNmYGJqive0abU3DtD2xY5wJY7TNbcUzDOJEKJIvG4B
      JjIZQqdD6HSV9p2b9bDYi6QQgkfpaZhXIHCmMn7MbepRx74R9y6cLZJ+78JZ6tg3wtymnkE2
      NUX1xwRXESdvH/qan+HLBV+hyF9VK0eZwokN64goffGzipMfOJ98RQnkoEw5QciBxHJPqyk0
      9+/x0yfv80fkAXKy9G/8GuUDkndvo16L1lg2tC/HQ+n8ERXBqX8tIvP3ZEReHtpHapJ2BfMg
      5RJN5b1q1I+JiQkv9B9Kyv5w7p77BZGXx91zv5CyP5wX+g/FxMTEIJua4sHdu6yYNImYnTtR
      5cdUP8zIqMXZoLZDWfadFSs++hezh27lEebUa9Ke3uOmMK06V8fo8BaL/X5k7oL+yOvY0cVz
      MjM9OsAPf1RjJoZj2dCBzu+8y8Ud33Dhv+vR5Wi4EXuUNoPfoO3wcZiYmKB9pCY+aCH3L18s
      cm7BwJTre4tp5taXPxVxJO0Owe3DZVjaNsDZ2werhvYkrP0M9Z3bmJiZYd+hGz3nfop1o6YA
      3I6PIWHN0iJ+I2dMAKBhu/a4LVpmkJ+CMjbq0rOwSdTQuT1dJr/HuS1rCge5ukx+r0j/viE2
      NUGDRo0Y/8EH/G/NGnatXEmuRsPJ/fuliLCa5vXwqFKPaR+pSdodgsuYiUXaxIag02STsGYp
      LV8bTpMe7lUt5jNLTUyHzlapOPD117X7DiBRNTKSz2Pn0pnG3d1quyjPNdIToIYp6wkgUT5S
      QIyERA0iCUDCqCm3CZSUlFTWYQmJ5xrpHUDCqJGaQBJGjSSAWkSpVDJu3DhuPjVFV8IwqqP+
      JAFIGDeiymjE9aOrxLTR/YSbq6twdXUT/Ya+IxYHx4nbuVX3Xln+CPYVrq5LREyxIzFiiaur
      cC3tb0nxM6obpVIpZs2aJezs7AQg6tSpI0aMGCEuXbpUaHP//n0RGBgomjVrJgBhYWEhJkyY
      IG7cuFGuf41GIzZt2iQaNGggdu7cWeSYTqcTMTExon///sLCwkIAonXr1iI0NFTodDohhBBj
      x44VQIl/vr6+pear0+lEcHBwYZmbNWsmgoODC/0aalMd9VdAcnKyGDJkiPDw8BCZmZnFjldR
      AJkiZomXcPV6VwSfvi1UuUIIoRGZl2NF8OLFIvyPqnmvCqUL4En0YvAN/usKmpOTIyZOnCg6
      dOgg4uPjxdixY8XZs2fFkiVLREREhBBC/wP3799feHl5iTNnzgidTieSk5NFjx49xMCBA0VW
      VlaJvnU6nTh06JBo1aqVqFOnjgCKCWDv3r3C3t5erF27ViiVSqHRaMSqVatE3bp1xf79+0st
      95YtW4SlpaXYu3dvqTbh4eGiXr16Ijg4WGi1WhEcHCzq1asnwsPDK2RT1foTQn8D8ff3F1ZW
      VsLc3Fy4ublVvwAyD84Rbq6+YvOVWrzVl8KzKoCbN2+KVq1aicDAQJGZmSnGjh1b7K6uVCrF
      wYMHhVarLZIeGBgomjdvXupT4ObNm2L48OHi0KFDYseOHSUK4NSpU+Ly5ctF0m7cuCGaN28u
      AgMDS/SblZUl+vXrJ3r06CHS09PLtBkxYoTIyckRQugv1hEjRoh+/fqJrKwsg2zKw5D6E0KI
      lStXipkzZ4qUlBTh5uZWqgCq8A6QTuSBGHL7+uHTppxJpU/E4GqvhhHg6V64YXZa7Gqmj8+P
      C5bL6e3lT1B0arEY3y2/PhkH7EnA5gs8uVOuMjGkMJ5X3nskH0dUcSMjbQa/hhTEIsvpPXI6
      6+Myqhx5ZmVlha2tLRkZGSXOTweoV68eQ4cOxczMrDAtLy+P69evI5PJSp027OTkxIEDBxgy
      ZEiRc5/k5ZdfxtnZuUhaWloaarUa81I2zo6Li0OhUPDuu+9ilx9Q/jS3bt3i4sWLDB8+vNCP
      ubk5w4cP5+LFi9y6dcsgm/IwpP4A5s6dy9q1a2nUqOypFFUQwHkST4NLl44YHGqhiiNo2noy
      XYczSr8Tdf5+2SH6uOD4WDaO17F/wWKK7pd9le8jCuKA4zm6oAuKr9dxuGDd2WthzJy6nrue
      K9gXp0Dxw3YWelZlDomWhNUTmLLdlInbYlAo4tgzoxH/mzWBoLjiG1RXBHt7exYuXEhwcDB+
      fn78+eef5Z6j0+lYvnw5O3bswN/fHyen0gPaK0pKSgr+/v7Y29vj5+dX7Hhubi5fffUVjo6O
      DBo0qFQ/6enpPHr0iPpPbaJdv359Hj16RHp6ukE25VGZ+iuLau0F0q+uIM//e2olBrQkBkdg
      t+IgO1Z+xEcj9Tt5dR0/G+9OjvodHGXWtPfxwYMzFN0vuw3D3y7Y7FqGnX0DQElWlv5ows7N
      nHecxEcz5Oj3s7amnk0VQh3S9/HNt/kbcLewACxoPHAxHw1Tsi/0MFVd79nX15cLFy7QvHlz
      fv75Z3r06MGyZctQq4svkXjv3j1GjRrFZ599xieffMKHH35Yxdz15OXlsWvXLnr27IlMJuPQ
      oUO0atWqmN25c+c4ceIEI0eOpFmz0mOKNRoN2lICprVaLRqNxiAbQ6hI/ZVHtQbEtJwYhmIi
      +mbLnJSnjt7FavAmZnQpGvysTY1m3dKNfH8uhcrtl32N384ooXN7qm0/66QLnKENAUU24JbR
      sk0bOJjIeUbTp4pZNG/enMWLF3Pnzh28vLwIDAzk4sWLbNq0qbB5cOrUKcaMGYODgwPx8fF0
      7Nixirnq0Wg0zJ49m9DQUObPn8/ChQuxtCw5Hjc8PBwrKyumTJlSpk9LS0tkpSzhIpPJCv0b
      YmMIhtSfIVRBAG15sSMcTDyPipYGNIMcefHpnai1CayetIBjXQPZcGQIra1lQCyB8jmVL9Zz
      hoWFBW+++SYWFhZ88MEHXLx4kS5dunDq1CmGDBlC//792bp1K/XqVU+8bG5uLlOnTmX//v2E
      h4czbFjpt5rLly8TFhbGoEGDaNu2bZl+7e3tqVOnDpn54YYFZGZmUqdOHezt9aGehthUhNLq
      z1Cq0ARy4rXXe2IeE8a3lV0t6tZvnElvi0+Ad/7FXxkc0O9nfbfKTZNCXDrQjaucv/Rke1/F
      pfNXoWcXqnIf1mg0PHxYfAEoa+vHEWG5ubkEBQXRoEEDVqxYUW0XP8BPP/3E7t27mTVrVpkX
      P8DevXvJzMzk7bffxtS07EvFycmJ9u3bExERQW5ubuH3iIiIoH379jg5ORlkUx6G1F9FqNI7
      QJMR83m363X+M202IYo08kPbUWYauMCRQ1OczK8QdSyZHLSoUxWEzFtFxfbLtqHviGHYnt7I
      sgM30O9nrSAqvgq9QPYj+JuPLdGrPuWAfods0iKXsyralhFvDUZ/n8pfuU4eSP5Cd4XvQAUr
      35XE3bt36dWrF+vWrSMjIwPQ32nXrl2Lh4cHLi4u3Llzh4SEBNzd3WldxubWW7duxczMjF27
      dhn81Y4fP465uTlDhw4t0y4jI4Pw8HBee+01evUqHgh/8uRJ6tevz7hx4wCwsbEhICCA6Oho
      QkNDycnJITQ0lOjoaAICArCxsTHIpjwMqT9D2bp1azWMBOemi1/CF4t3Br6aP5r6qhjoM018
      9uRIcMwS4erqK4p3t+eK2wcXixGv6s8bMW2ViLodJZa4uorCAdmSzi2WphFJ4XMf+5kbLL77
      YlzVxgFy08UvwXPF6H5uwtXVVbw6Ypr4+qd08XjE4w8R7OtaJA/92MMTZS8BrVYrDh06JPr0
      6VM4EmtnZydmzZollEqlEEKIuLg4YWtrW+JIrK2trYiLixNqtVoMGDBAvPLKKyIjI0MIIcTO
      nTtLHcEtGD8oa5R37NixheUsb+CroIxPnvNXjAQbUn+ZmZnCzc2t1O8ZGBhYWH/VMBVCorIU
      XJAlDdCUR0JCgmjVqpWIjY2tgZI9H1RH/UmT4Z5T9u/fz5tvvlli80SifArq7/8ApUsUF64U
      SF0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='148' name='Revenue by Country' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='User Comparison' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
